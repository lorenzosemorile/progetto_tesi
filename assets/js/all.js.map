{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/youtube-search/index.js","webpack:///./node_modules/querystring/index.js","webpack:///./node_modules/querystring/decode.js","webpack:///./node_modules/querystring/encode.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///../src/lib/directive.ts","webpack:///../src/lib/dom.ts","webpack:///../src/lib/part.ts","webpack:///../src/lib/template.ts","webpack:///../src/lib/template-instance.ts","webpack:///../src/lib/template-result.ts","webpack:///../src/lib/parts.ts","webpack:///../src/lib/default-template-processor.ts","webpack:///../src/lib/template-factory.ts","webpack:///../src/lib/render.ts","webpack:///src/lit-html.ts","webpack:///../src/lib/modify-template.ts","webpack:///../src/lib/shady-render.ts","webpack:///../src/lib/updating-element.ts","webpack:///../src/lib/decorators.ts","webpack:///../src/lib/css-tag.ts","webpack:///src/lit-element.ts","webpack:///./general/app-header/app-header.js","webpack:///./general/app-menu/app-menu.js","webpack:///./utilities/date.js","webpack:///./general/app-main-headline/app-main-headline.js","webpack:///./general/app-more-headlines/app-more-headlines.js","webpack:///./general/app-sidebar/app-sidebar.js","webpack:///./layouts/app-layout-soft/app-layout-soft.js","webpack:///./layouts/app-layout-soft/app-layout-medium.js","webpack:///./utilities/cookies.js","webpack:///./general/app-hero/app-main-hero.js","webpack:///./layouts/app-layout-soft/app-layout-hard.js","webpack:///./layouts/all.js","webpack:///./utilities/sources.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","process","transformRequest","data","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","method","args","Array","apply","settle","buildURL","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","toUpperCase","url","params","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","__CANCEL__","Cancel","this","querystring","axios","allowedProperties","search","term","opts","cb","err","results","pageInfo","q","part","maxResults","keys","map","k","totalResults","resultsPerPage","nextPageToken","prevPageToken","findings","items","item","link","id","kind","channelId","playlistId","videoId","publishedAt","snippet","channelTitle","title","description","thumbnails","catch","decode","encode","prop","qs","sep","eq","options","regexp","split","maxKeys","len","kstr","vstr","v","x","idx","substr","decodeURIComponent","push","stringifyPrimitive","isFinite","ks","encodeURIComponent","join","Axios","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","default","constructor","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","normalizedName","serializedParams","parts","toISOString","ignoreDuplicateOf","parsed","line","concat","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","remove","now","handlers","use","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","fns","relativeURL","executor","TypeError","resolvePromise","token","source","callback","arr","directives","WeakMap","isDirective","has","isCEPolyfill","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","Template","element","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","attributeValue","getAttribute","removeAttribute","statics","type","tagName","currentNode","parent","parentNode","lastIndex","insert","createMarker","createTextNode","insertBefore","previousSibling","pop","suffix","isTemplatePartActive","createComment","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","innerHTML","getHTML","isPrimitive","isIterable","iterator","AttributeCommitter","dirty","_createPart","text","_getValue","committer","directive","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","set","getTemplateElement","removeNodesFromTemplate","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","_obj","defaultConverter","Boolean","Number","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","finalize","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","_ensureClassProperties","noAccessor","oldValue","_requestUpdate","configurable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","previousUpdatePromise","res","rej","performUpdate","_hasConnected","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","flattenStyles","flat","Infinity","arrayFlat","_styles","_getUniqueStyles","userStyles","reduceRight","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","cssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","firstScopeRender","renderContainer","createDocumentFragment","appendInto","delete","Header","LitElement","define","Menu","date_format","iso","date","getDate","getMonth","getFullYear","_empty","MainHeadline","videos","get_video","body","direct","param","log","article","urlToImage","author","renderVideo","video","MoreHeadlines","books","Sidebar","get_books","URL","searchParams","append","resp","fetch","ok","json","articles","renderBooks","filter","volumeInfo","imageLinks","splice","book","authors","year","publishedDate","canonicalVolumeLink","thumbnail","subtitle","publisher","SoftLayout","MediumLayout","read_cookie","find","row","startsWith","Hero","HardLayout","more","sidebar","Portal","get_data","layout","_data","sources","profile","profiles","get_sources_for_profile","data_type","includes","requestUpdate"],"mappings":";aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,4BAIjBlC,EAAoBA,EAAoBmC,EAAI,I,+BChFrD,IAAIP,EAAOQ,EAAQ,GACfC,EAAWD,EAAQ,IAMnBE,EAAWxB,OAAOkB,UAAUM,SAQhC,SAASC,EAAQC,GACf,MAA8B,mBAAvBF,EAAS/B,KAAKiC,GA2EvB,SAASC,EAASD,GAChB,OAAe,OAARA,GAA+B,iBAARA,EAuChC,SAASE,EAAWF,GAClB,MAA8B,sBAAvBF,EAAS/B,KAAKiC,GAoEvB,SAASG,EAAQC,EAAKC,GAEpB,GAAID,QAUJ,GALmB,iBAARA,IAETA,EAAM,CAACA,IAGLL,EAAQK,GAEV,IAAK,IAAIxC,EAAI,EAAGC,EAAIuC,EAAIE,OAAQ1C,EAAIC,EAAGD,IACrCyC,EAAGtC,KAAK,KAAMqC,EAAIxC,GAAIA,EAAGwC,QAI3B,IAAK,IAAIjB,KAAOiB,EACV9B,OAAOkB,UAAUC,eAAe1B,KAAKqC,EAAKjB,IAC5CkB,EAAGtC,KAAK,KAAMqC,EAAIjB,GAAMA,EAAKiB,GA0DrCzC,EAAOD,QAAU,CACfqC,QAASA,EACTQ,cAhQF,SAAuBP,GACrB,MAA8B,yBAAvBF,EAAS/B,KAAKiC,IAgQrBH,SAAUA,EACVW,WAxPF,SAAoBR,GAClB,MAA4B,oBAAbS,UAA8BT,aAAeS,UAwP5DC,kBA/OF,SAA2BV,GAOzB,MAL4B,oBAAhBW,aAAiCA,YAAYC,OAC9CD,YAAYC,OAAOZ,GAElBA,GAASA,EAAIa,QAAYb,EAAIa,kBAAkBF,aA2O3DG,SAhOF,SAAkBd,GAChB,MAAsB,iBAARA,GAgOde,SAvNF,SAAkBf,GAChB,MAAsB,iBAARA,GAuNdC,SAAUA,EACVe,YA/MF,SAAqBhB,GACnB,YAAsB,IAARA,GA+MdiB,OA5LF,SAAgBjB,GACd,MAA8B,kBAAvBF,EAAS/B,KAAKiC,IA4LrBkB,OAnLF,SAAgBlB,GACd,MAA8B,kBAAvBF,EAAS/B,KAAKiC,IAmLrBmB,OA1KF,SAAgBnB,GACd,MAA8B,kBAAvBF,EAAS/B,KAAKiC,IA0KrBE,WAAYA,EACZkB,SAxJF,SAAkBpB,GAChB,OAAOC,EAASD,IAAQE,EAAWF,EAAIqB,OAwJvCC,kBA/IF,SAA2BtB,GACzB,MAAkC,oBAApBuB,iBAAmCvB,aAAeuB,iBA+IhEC,qBArHF,WACE,OAAyB,oBAAdC,WAAmD,gBAAtBA,UAAUC,WAI9B,oBAAXC,QACa,oBAAbC,WAgHTzB,QAASA,EACT0B,MArDF,SAASA,IACP,IAAIC,EAAS,GACb,SAASC,EAAY/B,EAAKb,GACG,iBAAhB2C,EAAO3C,IAAoC,iBAARa,EAC5C8B,EAAO3C,GAAO0C,EAAMC,EAAO3C,GAAMa,GAEjC8B,EAAO3C,GAAOa,EAIlB,IAAK,IAAIpC,EAAI,EAAGC,EAAImE,UAAU1B,OAAQ1C,EAAIC,EAAGD,IAC3CuC,EAAQ6B,UAAUpE,GAAImE,GAExB,OAAOD,GAyCPG,OA9BF,SAAgBC,EAAGC,EAAGC,GAQpB,OAPAjC,EAAQgC,GAAG,SAAqBnC,EAAKb,GAEjC+C,EAAE/C,GADAiD,GAA0B,mBAARpC,EACXZ,EAAKY,EAAKoC,GAEVpC,KAGNkC,GAuBPG,KA1IF,SAAcC,GACZ,OAAOA,EAAIC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,O,6BClKjD,IAAIC,EAAQ5C,EAAQ,GAChB6C,EAAsB7C,EAAQ,IAE9B8C,EAAuB,CACzB,eAAgB,qCAGlB,SAASC,EAAsBC,EAAS/D,IACjC2D,EAAMxB,YAAY4B,IAAYJ,EAAMxB,YAAY4B,EAAQ,mBAC3DA,EAAQ,gBAAkB/D,GAgB9B,IAXMgE,EAWFC,EAAW,CACbD,SAX8B,oBAAnBE,eAETF,EAAUjD,EAAQ,GACU,oBAAZoD,UAEhBH,EAAUjD,EAAQ,IAEbiD,GAMPI,iBAAkB,CAAC,SAA0BC,EAAMN,GAEjD,OADAH,EAAoBG,EAAS,gBACzBJ,EAAMhC,WAAW0C,IACnBV,EAAMjC,cAAc2C,IACpBV,EAAM3C,SAASqD,IACfV,EAAMpB,SAAS8B,IACfV,EAAMtB,OAAOgC,IACbV,EAAMrB,OAAO+B,GAENA,EAELV,EAAM9B,kBAAkBwC,GACnBA,EAAKrC,OAEV2B,EAAMlB,kBAAkB4B,IAC1BP,EAAsBC,EAAS,mDACxBM,EAAKpD,YAEV0C,EAAMvC,SAASiD,IACjBP,EAAsBC,EAAS,kCACxBO,KAAKC,UAAUF,IAEjBA,IAGTG,kBAAmB,CAAC,SAA2BH,GAE7C,GAAoB,iBAATA,EACT,IACEA,EAAOC,KAAKG,MAAMJ,GAClB,MAAOK,IAEX,OAAOL,IAOTM,QAAS,EAETC,eAAgB,aAChBC,eAAgB,eAEhBC,kBAAmB,EAEnBC,eAAgB,SAAwBC,GACtC,OAAOA,GAAU,KAAOA,EAAS,MAIrCf,EAASF,QAAU,CACjBkB,OAAQ,CACN,OAAU,sCAIdtB,EAAMrC,QAAQ,CAAC,SAAU,MAAO,SAAS,SAA6B4D,GACpEjB,EAASF,QAAQmB,GAAU,MAG7BvB,EAAMrC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+B4D,GACrEjB,EAASF,QAAQmB,GAAUvB,EAAMX,MAAMa,MAGzC/E,EAAOD,QAAUoF,G,6BC7FjBnF,EAAOD,QAAU,SAAc2C,EAAI+B,GACjC,OAAO,WAEL,IADA,IAAI4B,EAAO,IAAIC,MAAMjC,UAAU1B,QACtB1C,EAAI,EAAGA,EAAIoG,EAAK1D,OAAQ1C,IAC/BoG,EAAKpG,GAAKoE,UAAUpE,GAEtB,OAAOyC,EAAG6D,MAAM9B,EAAS4B,M,6BCN7B,IAAIxB,EAAQ5C,EAAQ,GAChBuE,EAASvE,EAAQ,IACjBwE,EAAWxE,EAAQ,IACnByE,EAAezE,EAAQ,IACvB0E,EAAkB1E,EAAQ,IAC1B2E,EAAc3E,EAAQ,GAE1BjC,EAAOD,QAAU,SAAoB8G,GACnC,OAAO,IAAIC,SAAQ,SAA4BC,EAASC,GACtD,IAAIC,EAAcJ,EAAOtB,KACrB2B,EAAiBL,EAAO5B,QAExBJ,EAAMhC,WAAWoE,WACZC,EAAe,gBAGxB,IAAIC,EAAU,IAAI/B,eAGlB,GAAIyB,EAAOO,KAAM,CACf,IAAIC,EAAWR,EAAOO,KAAKC,UAAY,GACnCC,EAAWT,EAAOO,KAAKE,UAAY,GACvCJ,EAAeK,cAAgB,SAAWC,KAAKH,EAAW,IAAMC,GA8DlE,GA3DAH,EAAQM,KAAKZ,EAAOT,OAAOsB,cAAejB,EAASI,EAAOc,IAAKd,EAAOe,OAAQf,EAAOgB,mBAAmB,GAGxGV,EAAQtB,QAAUgB,EAAOhB,QAGzBsB,EAAQW,mBAAqB,WAC3B,GAAKX,GAAkC,IAAvBA,EAAQY,aAQD,IAAnBZ,EAAQjB,QAAkBiB,EAAQa,aAAwD,IAAzCb,EAAQa,YAAYC,QAAQ,UAAjF,CAKA,IAAIC,EAAkB,0BAA2Bf,EAAUT,EAAaS,EAAQgB,yBAA2B,KAEvGC,EAAW,CACb7C,KAFkBsB,EAAOwB,cAAwC,SAAxBxB,EAAOwB,aAAiDlB,EAAQiB,SAA/BjB,EAAQmB,aAGlFpC,OAAQiB,EAAQjB,OAChBqC,WAAYpB,EAAQoB,WACpBtD,QAASiD,EACTrB,OAAQA,EACRM,QAASA,GAGXX,EAAOO,EAASC,EAAQoB,GAGxBjB,EAAU,OAIZA,EAAQqB,QAAU,WAGhBxB,EAAOJ,EAAY,gBAAiBC,EAAQ,KAAMM,IAGlDA,EAAU,MAIZA,EAAQsB,UAAY,WAClBzB,EAAOJ,EAAY,cAAgBC,EAAOhB,QAAU,cAAegB,EAAQ,eACzEM,IAGFA,EAAU,MAMRtC,EAAMhB,uBAAwB,CAChC,IAAI6E,EAAUzG,EAAQ,IAGlB0G,GAAa9B,EAAO+B,iBAAmBjC,EAAgBE,EAAOc,OAASd,EAAOf,eAC9E4C,EAAQG,KAAKhC,EAAOf,qBACpBgD,EAEAH,IACFzB,EAAeL,EAAOd,gBAAkB4C,GAuB5C,GAlBI,qBAAsBxB,GACxBtC,EAAMrC,QAAQ0E,GAAgB,SAA0B7E,EAAKb,QAChC,IAAhByF,GAAqD,iBAAtBzF,EAAIuH,qBAErC7B,EAAe1F,GAGtB2F,EAAQ6B,iBAAiBxH,EAAKa,MAMhCwE,EAAO+B,kBACTzB,EAAQyB,iBAAkB,GAIxB/B,EAAOwB,aACT,IACElB,EAAQkB,aAAexB,EAAOwB,aAC9B,MAAOzC,GAGP,GAA4B,SAAxBiB,EAAOwB,aACT,MAAMzC,EAM6B,mBAA9BiB,EAAOoC,oBAChB9B,EAAQ+B,iBAAiB,WAAYrC,EAAOoC,oBAIP,mBAA5BpC,EAAOsC,kBAAmChC,EAAQiC,QAC3DjC,EAAQiC,OAAOF,iBAAiB,WAAYrC,EAAOsC,kBAGjDtC,EAAOwC,aAETxC,EAAOwC,YAAYC,QAAQC,MAAK,SAAoBC,GAC7CrC,IAILA,EAAQsC,QACRzC,EAAOwC,GAEPrC,EAAU,cAIM2B,IAAhB7B,IACFA,EAAc,MAIhBE,EAAQuC,KAAKzC,Q,6BC7JjB,IAAI0C,EAAe1H,EAAQ,IAY3BjC,EAAOD,QAAU,SAAqB6J,EAAS/C,EAAQgD,EAAM1C,EAASiB,GACpE,IAAI0B,EAAQ,IAAIC,MAAMH,GACtB,OAAOD,EAAaG,EAAOjD,EAAQgD,EAAM1C,EAASiB,K,6BCdpDpI,EAAOD,QAAU,SAAkBmB,GACjC,SAAUA,IAASA,EAAM8I,c,6BCK3B,SAASC,EAAOL,GACdM,KAAKN,QAAUA,EAGjBK,EAAOpI,UAAUM,SAAW,WAC1B,MAAO,UAAY+H,KAAKN,QAAU,KAAOM,KAAKN,QAAU,KAG1DK,EAAOpI,UAAUmI,YAAa,EAE9BhK,EAAOD,QAAUkK,G,gBClBjB,IAAIE,EAAclI,EAAQ,GACtBmI,EAAQnI,EAAQ,IAEhBoI,EAAoB,CACtB,SACA,YACA,cACA,YACA,kBACA,eACA,UACA,WACA,iBACA,yBACA,QACA,YACA,iBACA,kBACA,aACA,mBACA,oBACA,aACA,UACA,OACA,eACA,kBACA,kBACA,iBACA,gBACA,kBACA,eACA,kBACA,YACA,OAGFrK,EAAOD,QAAU,SAASuK,EAAQC,EAAMC,EAAMC,GAQ5C,GAPoB,mBAATD,IACTC,EAAKD,EACLA,EAAO,IAGJA,IAAMA,EAAO,KAEbC,EACH,OAAO,IAAI3D,SAAQ,SAAUC,EAASC,GACpCsD,EAAOC,EAAMC,GAAM,SAAUE,EAAKC,EAASC,GACzC,GAAIF,EAAK,OAAO1D,EAAO0D,GACvB3D,EAAQ,CAAC4D,QAASA,EAASC,SAAUA,UAK3C,IAAIhD,EAAS,CACXiD,EAAGN,EACHO,KAAMN,EAAKM,MAAQ,UACnBC,WAAYP,EAAKO,YAAc,IAGjCpK,OAAOqK,KAAKR,GAAMS,KAAI,SAAUC,GAC1Bb,EAAkBpC,QAAQiD,IAAM,IAAGtD,EAAOsD,GAAKV,EAAKU,OAG1Dd,EAAMtJ,IAAI,gDAAkDqJ,EAAY1E,UAAUmC,IAC/E2B,MAAK,SAAUnB,GACd,IAAIjE,EAASiE,EAAS7C,KAElBqF,EAAW,CACbO,aAAchH,EAAOyG,SAASO,aAC9BC,eAAgBjH,EAAOyG,SAASQ,eAChCC,cAAelH,EAAOkH,cACtBC,cAAenH,EAAOmH,eAGpBC,EAAWpH,EAAOqH,MAAMP,KAAI,SAAUQ,GACxC,IAAIC,EAAO,GACPC,EAAK,GACT,OAAQF,EAAKE,GAAGC,MACd,IAAK,kBACHF,EAAO,mCAAqCD,EAAKE,GAAGE,UACpDF,EAAKF,EAAKE,GAAGE,UACb,MACF,IAAK,mBACHH,EAAO,yCAA2CD,EAAKE,GAAGG,WAC1DH,EAAKF,EAAKE,GAAGG,WACb,MACF,QACEJ,EAAO,mCAAqCD,EAAKE,GAAGI,QACpDJ,EAAKF,EAAKE,GAAGI,QAIjB,MAAO,CACLJ,GAAIA,EACJD,KAAMA,EACNE,KAAMH,EAAKE,GAAGC,KACdI,YAAaP,EAAKQ,QAAQD,YAC1BH,UAAWJ,EAAKQ,QAAQJ,UACxBK,aAAcT,EAAKQ,QAAQC,aAC3BC,MAAOV,EAAKQ,QAAQE,MACpBC,YAAaX,EAAKQ,QAAQG,YAC1BC,WAAYZ,EAAKQ,QAAQI,eAI7B,OAAO5B,EAAG,KAAMc,EAAUX,MAE3B0B,OAAM,SAAU5B,GACf,OAAOD,EAAGC,Q,6BC1GhB3K,EAAQwM,OAASxM,EAAQ4F,MAAQ1D,EAAQ,GACzClC,EAAQyM,OAASzM,EAAQ0F,UAAYxD,EAAQ,K,6BCuB7C,SAASH,EAAeW,EAAKgK,GAC3B,OAAO9L,OAAOkB,UAAUC,eAAe1B,KAAKqC,EAAKgK,GAGnDzM,EAAOD,QAAU,SAAS2M,EAAIC,EAAKC,EAAIC,GACrCF,EAAMA,GAAO,IACbC,EAAKA,GAAM,IACX,IAAInK,EAAM,GAEV,GAAkB,iBAAPiK,GAAiC,IAAdA,EAAG/J,OAC/B,OAAOF,EAGT,IAAIqK,EAAS,MACbJ,EAAKA,EAAGK,MAAMJ,GAEd,IAAIK,EAAU,IACVH,GAAsC,iBAApBA,EAAQG,UAC5BA,EAAUH,EAAQG,SAGpB,IAAIC,EAAMP,EAAG/J,OAETqK,EAAU,GAAKC,EAAMD,IACvBC,EAAMD,GAGR,IAAK,IAAI/M,EAAI,EAAGA,EAAIgN,IAAOhN,EAAG,CAC5B,IAEIiN,EAAMC,EAAMjC,EAAGkC,EAFfC,EAAIX,EAAGzM,GAAG2E,QAAQkI,EAAQ,OAC1BQ,EAAMD,EAAEpF,QAAQ2E,GAGhBU,GAAO,GACTJ,EAAOG,EAAEE,OAAO,EAAGD,GACnBH,EAAOE,EAAEE,OAAOD,EAAM,KAEtBJ,EAAOG,EACPF,EAAO,IAGTjC,EAAIsC,mBAAmBN,GACvBE,EAAII,mBAAmBL,GAElBrL,EAAeW,EAAKyI,GAEd5E,MAAMlE,QAAQK,EAAIyI,IAC3BzI,EAAIyI,GAAGuC,KAAKL,GAEZ3K,EAAIyI,GAAK,CAACzI,EAAIyI,GAAIkC,GAJlB3K,EAAIyI,GAAKkC,EAQb,OAAO3K,I,6BCvDT,IAAIiL,EAAqB,SAASN,GAChC,cAAeA,GACb,IAAK,SACH,OAAOA,EAET,IAAK,UACH,OAAOA,EAAI,OAAS,QAEtB,IAAK,SACH,OAAOO,SAASP,GAAKA,EAAI,GAE3B,QACE,MAAO,KAIbpN,EAAOD,QAAU,SAAS0C,EAAKkK,EAAKC,EAAIpM,GAOtC,OANAmM,EAAMA,GAAO,IACbC,EAAKA,GAAM,IACC,OAARnK,IACFA,OAAMqG,GAGW,iBAARrG,EACF9B,OAAOqK,KAAKvI,GAAKwI,KAAI,SAASC,GACnC,IAAI0C,EAAKC,mBAAmBH,EAAmBxC,IAAM0B,EACrD,OAAItG,MAAMlE,QAAQK,EAAIyI,IACbzI,EAAIyI,GAAGD,KAAI,SAASmC,GACzB,OAAOQ,EAAKC,mBAAmBH,EAAmBN,OACjDU,KAAKnB,GAEDiB,EAAKC,mBAAmBH,EAAmBjL,EAAIyI,QAEvD4C,KAAKnB,GAILnM,EACEqN,mBAAmBH,EAAmBlN,IAASoM,EAC/CiB,mBAAmBH,EAAmBjL,IAF3B,K,gBC5DpBzC,EAAOD,QAAUkC,EAAQ,K,6BCEzB,IAAI4C,EAAQ5C,EAAQ,GAChBR,EAAOQ,EAAQ,GACf8L,EAAQ9L,EAAQ,IAChBkD,EAAWlD,EAAQ,GAQvB,SAAS+L,EAAeC,GACtB,IAAIC,EAAU,IAAIH,EAAME,GACpBE,EAAW1M,EAAKsM,EAAMlM,UAAUsF,QAAS+G,GAQ7C,OALArJ,EAAMP,OAAO6J,EAAUJ,EAAMlM,UAAWqM,GAGxCrJ,EAAMP,OAAO6J,EAAUD,GAEhBC,EAIT,IAAI/D,EAAQ4D,EAAe7I,GAG3BiF,EAAM2D,MAAQA,EAGd3D,EAAM7I,OAAS,SAAgB6M,GAC7B,OAAOJ,EAAenJ,EAAMX,MAAMiB,EAAUiJ,KAI9ChE,EAAMH,OAAShI,EAAQ,GACvBmI,EAAMiE,YAAcpM,EAAQ,IAC5BmI,EAAMkE,SAAWrM,EAAQ,GAGzBmI,EAAMmE,IAAM,SAAaC,GACvB,OAAO1H,QAAQyH,IAAIC,IAErBpE,EAAMqE,OAASxM,EAAQ,IAEvBjC,EAAOD,QAAUqK,EAGjBpK,EAAOD,QAAQ2O,QAAUtE,G,cC5CzBpK,EAAOD,QAAU,SAAmB0C,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAIkM,aACY,mBAA7BlM,EAAIkM,YAAYzM,UAA2BO,EAAIkM,YAAYzM,SAASO,K,6BCP/E,IAAI0C,EAAWlD,EAAQ,GACnB4C,EAAQ5C,EAAQ,GAChB2M,EAAqB3M,EAAQ,IAC7B4M,EAAkB5M,EAAQ,IAO9B,SAAS8L,EAAMK,GACblE,KAAK/E,SAAWiJ,EAChBlE,KAAK4E,aAAe,CAClB3H,QAAS,IAAIyH,EACbxG,SAAU,IAAIwG,GASlBb,EAAMlM,UAAUsF,QAAU,SAAiBN,GAGnB,iBAAXA,IACTA,EAAShC,EAAMX,MAAM,CACnByD,IAAKtD,UAAU,IACdA,UAAU,MAGfwC,EAAShC,EAAMX,MAAMiB,EAAU,CAACiB,OAAQ,OAAQ8D,KAAK/E,SAAU0B,IACxDT,OAASS,EAAOT,OAAO2C,cAG9B,IAAIgG,EAAQ,CAACF,OAAiB/F,GAC1BQ,EAAUxC,QAAQC,QAAQF,GAU9B,IARAqD,KAAK4E,aAAa3H,QAAQ3E,SAAQ,SAAoCwM,GACpED,EAAME,QAAQD,EAAYE,UAAWF,EAAYG,aAGnDjF,KAAK4E,aAAa1G,SAAS5F,SAAQ,SAAkCwM,GACnED,EAAMtB,KAAKuB,EAAYE,UAAWF,EAAYG,aAGzCJ,EAAMpM,QACX2G,EAAUA,EAAQC,KAAKwF,EAAMK,QAASL,EAAMK,SAG9C,OAAO9F,GAITzE,EAAMrC,QAAQ,CAAC,SAAU,MAAO,OAAQ,YAAY,SAA6B4D,GAE/E2H,EAAMlM,UAAUuE,GAAU,SAASuB,EAAKd,GACtC,OAAOqD,KAAK/C,QAAQtC,EAAMX,MAAM2C,GAAU,GAAI,CAC5CT,OAAQA,EACRuB,IAAKA,SAKX9C,EAAMrC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+B4D,GAErE2H,EAAMlM,UAAUuE,GAAU,SAASuB,EAAKpC,EAAMsB,GAC5C,OAAOqD,KAAK/C,QAAQtC,EAAMX,MAAM2C,GAAU,GAAI,CAC5CT,OAAQA,EACRuB,IAAKA,EACLpC,KAAMA,SAKZvF,EAAOD,QAAUgO,G,6BC5EjB,IAAIlJ,EAAQ5C,EAAQ,GAEpBjC,EAAOD,QAAU,SAA6BkF,EAASoK,GACrDxK,EAAMrC,QAAQyC,GAAS,SAAuB/D,EAAOV,GAC/CA,IAAS6O,GAAkB7O,EAAKkH,gBAAkB2H,EAAe3H,gBACnEzC,EAAQoK,GAAkBnO,SACnB+D,EAAQzE,S,6BCNrB,IAAIoG,EAAc3E,EAAQ,GAS1BjC,EAAOD,QAAU,SAAgBgH,EAASC,EAAQoB,GAChD,IAAInC,EAAiBmC,EAASvB,OAAOZ,eAEhCmC,EAASlC,QAAWD,IAAkBA,EAAemC,EAASlC,QAGjEc,EAAOJ,EACL,mCAAqCwB,EAASlC,OAC9CkC,EAASvB,OACT,KACAuB,EAASjB,QACTiB,IAPFrB,EAAQqB,K,6BCHZpI,EAAOD,QAAU,SAAsB+J,EAAOjD,EAAQgD,EAAM1C,EAASiB,GAOnE,OANA0B,EAAMjD,OAASA,EACXgD,IACFC,EAAMD,KAAOA,GAEfC,EAAM3C,QAAUA,EAChB2C,EAAM1B,SAAWA,EACV0B,I,6BCjBT,IAAIjF,EAAQ5C,EAAQ,GAEpB,SAASuK,EAAOnK,GACd,OAAOwL,mBAAmBxL,GACxBuC,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAUrB5E,EAAOD,QAAU,SAAkB4H,EAAKC,EAAQC,GAE9C,IAAKD,EACH,OAAOD,EAGT,IAAI2H,EACJ,GAAIzH,EACFyH,EAAmBzH,EAAiBD,QAC/B,GAAI/C,EAAMlB,kBAAkBiE,GACjC0H,EAAmB1H,EAAOzF,eACrB,CACL,IAAIoN,EAAQ,GAEZ1K,EAAMrC,QAAQoF,GAAQ,SAAmBvF,EAAKb,GACxCa,UAIAwC,EAAMzC,QAAQC,GAChBb,GAAY,KAEZa,EAAM,CAACA,GAGTwC,EAAMrC,QAAQH,GAAK,SAAoB+K,GACjCvI,EAAMvB,OAAO8J,GACfA,EAAIA,EAAEoC,cACG3K,EAAMvC,SAAS8K,KACxBA,EAAI5H,KAAKC,UAAU2H,IAErBmC,EAAM9B,KAAKjB,EAAOhL,GAAO,IAAMgL,EAAOY,WAI1CkC,EAAmBC,EAAMzB,KAAK,KAOhC,OAJIwB,IACF3H,KAA8B,IAAtBA,EAAIM,QAAQ,KAAc,IAAM,KAAOqH,GAG1C3H,I,6BC9DT,IAAI9C,EAAQ5C,EAAQ,GAIhBwN,EAAoB,CACtB,MAAO,gBAAiB,iBAAkB,eAAgB,OAC1D,UAAW,OAAQ,OAAQ,oBAAqB,sBAChD,gBAAiB,WAAY,eAAgB,sBAC7C,UAAW,cAAe,cAgB5BzP,EAAOD,QAAU,SAAsBkF,GACrC,IACIzD,EACAa,EACApC,EAHAyP,EAAS,GAKb,OAAKzK,GAELJ,EAAMrC,QAAQyC,EAAQ8H,MAAM,OAAO,SAAgB4C,GAKjD,GAJA1P,EAAI0P,EAAK1H,QAAQ,KACjBzG,EAAMqD,EAAMH,KAAKiL,EAAKpC,OAAO,EAAGtN,IAAI8I,cACpC1G,EAAMwC,EAAMH,KAAKiL,EAAKpC,OAAOtN,EAAI,IAE7BuB,EAAK,CACP,GAAIkO,EAAOlO,IAAQiO,EAAkBxH,QAAQzG,IAAQ,EACnD,OAGAkO,EAAOlO,GADG,eAARA,GACakO,EAAOlO,GAAOkO,EAAOlO,GAAO,IAAIoO,OAAO,CAACvN,IAEzCqN,EAAOlO,GAAOkO,EAAOlO,GAAO,KAAOa,EAAMA,MAKtDqN,GAnBgBA,I,6BC9BzB,IAAI7K,EAAQ5C,EAAQ,GAEpBjC,EAAOD,QACL8E,EAAMhB,uBAIL,WACC,IAEIgM,EAFAC,EAAO,kBAAkBC,KAAKjM,UAAUkM,WACxCC,EAAiBhM,SAASiM,cAAc,KAS5C,SAASC,EAAWxI,GAClB,IAAIyI,EAAOzI,EAWX,OATImI,IAEFG,EAAeI,aAAa,OAAQD,GACpCA,EAAOH,EAAeG,MAGxBH,EAAeI,aAAa,OAAQD,GAG7B,CACLA,KAAMH,EAAeG,KACrBE,SAAUL,EAAeK,SAAWL,EAAeK,SAAS1L,QAAQ,KAAM,IAAM,GAChF2L,KAAMN,EAAeM,KACrBjG,OAAQ2F,EAAe3F,OAAS2F,EAAe3F,OAAO1F,QAAQ,MAAO,IAAM,GAC3E4L,KAAMP,EAAeO,KAAOP,EAAeO,KAAK5L,QAAQ,KAAM,IAAM,GACpE6L,SAAUR,EAAeQ,SACzBC,KAAMT,EAAeS,KACrBC,SAAiD,MAAtCV,EAAeU,SAASC,OAAO,GAChCX,EAAeU,SACf,IAAMV,EAAeU,UAYnC,OARAd,EAAYM,EAAWnM,OAAO6M,SAAST,MAQhC,SAAyBU,GAC9B,IAAIpB,EAAU7K,EAAM1B,SAAS2N,GAAeX,EAAWW,GAAcA,EACrE,OAAQpB,EAAOY,WAAaT,EAAUS,UAChCZ,EAAOa,OAASV,EAAUU,MAhDnC,GAsDQ,WACL,OAAO,I,6BC9Db,IAAI1L,EAAQ5C,EAAQ,GAEpBjC,EAAOD,QACL8E,EAAMhB,uBAIG,CACLkN,MAAO,SAAevQ,EAAMU,EAAO8P,EAASC,EAAMC,EAAQC,GACxD,IAAIC,EAAS,GACbA,EAAO3D,KAAKjN,EAAO,IAAMqN,mBAAmB3M,IAExC2D,EAAMzB,SAAS4N,IACjBI,EAAO3D,KAAK,WAAa,IAAI4D,KAAKL,GAASM,eAGzCzM,EAAM1B,SAAS8N,IACjBG,EAAO3D,KAAK,QAAUwD,GAGpBpM,EAAM1B,SAAS+N,IACjBE,EAAO3D,KAAK,UAAYyD,IAGX,IAAXC,GACFC,EAAO3D,KAAK,UAGdxJ,SAASmN,OAASA,EAAOtD,KAAK,OAGhCjF,KAAM,SAAcrI,GAClB,IAAI+Q,EAAQtN,SAASmN,OAAOG,MAAM,IAAIC,OAAO,aAAehR,EAAO,cACnE,OAAQ+Q,EAAQ/D,mBAAmB+D,EAAM,IAAM,MAGjDE,OAAQ,SAAgBjR,GACtB0J,KAAK6G,MAAMvQ,EAAM,GAAI6Q,KAAKK,MAAQ,SAO/B,CACLX,MAAO,aACPlI,KAAM,WAAkB,OAAO,MAC/B4I,OAAQ,e,6BC/Cd,IAAI5M,EAAQ5C,EAAQ,GAEpB,SAAS2M,IACP1E,KAAKyH,SAAW,GAWlB/C,EAAmB/M,UAAU+P,IAAM,SAAa1C,EAAWC,GAKzD,OAJAjF,KAAKyH,SAASlE,KAAK,CACjByB,UAAWA,EACXC,SAAUA,IAELjF,KAAKyH,SAAShP,OAAS,GAQhCiM,EAAmB/M,UAAUgQ,MAAQ,SAAelG,GAC9CzB,KAAKyH,SAAShG,KAChBzB,KAAKyH,SAAShG,GAAM,OAYxBiD,EAAmB/M,UAAUW,QAAU,SAAiBE,GACtDmC,EAAMrC,QAAQ0H,KAAKyH,UAAU,SAAwBG,GACzC,OAANA,GACFpP,EAAGoP,OAKT9R,EAAOD,QAAU6O,G,6BCjDjB,IAAI/J,EAAQ5C,EAAQ,GAChB8P,EAAgB9P,EAAQ,IACxBqM,EAAWrM,EAAQ,GACnBkD,EAAWlD,EAAQ,GACnB+P,EAAgB/P,EAAQ,IACxBgQ,EAAchQ,EAAQ,IAK1B,SAASiQ,EAA6BrL,GAChCA,EAAOwC,aACTxC,EAAOwC,YAAY8I,mBAUvBnS,EAAOD,QAAU,SAAyB8G,GAkCxC,OAjCAqL,EAA6BrL,GAGzBA,EAAOuL,UAAYJ,EAAcnL,EAAOc,OAC1Cd,EAAOc,IAAMsK,EAAYpL,EAAOuL,QAASvL,EAAOc,MAIlDd,EAAO5B,QAAU4B,EAAO5B,SAAW,GAGnC4B,EAAOtB,KAAOwM,EACZlL,EAAOtB,KACPsB,EAAO5B,QACP4B,EAAOvB,kBAITuB,EAAO5B,QAAUJ,EAAMX,MACrB2C,EAAO5B,QAAQkB,QAAU,GACzBU,EAAO5B,QAAQ4B,EAAOT,SAAW,GACjCS,EAAO5B,SAAW,IAGpBJ,EAAMrC,QACJ,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAAS,WAClD,SAA2B4D,UAClBS,EAAO5B,QAAQmB,OAIZS,EAAO3B,SAAWC,EAASD,SAE1B2B,GAAQ0C,MAAK,SAA6BnB,GAUvD,OATA8J,EAA6BrL,GAG7BuB,EAAS7C,KAAOwM,EACd3J,EAAS7C,KACT6C,EAASnD,QACT4B,EAAOnB,mBAGF0C,KACN,SAA4BiK,GAc7B,OAbK/D,EAAS+D,KACZH,EAA6BrL,GAGzBwL,GAAUA,EAAOjK,WACnBiK,EAAOjK,SAAS7C,KAAOwM,EACrBM,EAAOjK,SAAS7C,KAChB8M,EAAOjK,SAASnD,QAChB4B,EAAOnB,qBAKNoB,QAAQE,OAAOqL,Q,6BCjF1B,IAAIxN,EAAQ5C,EAAQ,GAUpBjC,EAAOD,QAAU,SAAuBwF,EAAMN,EAASqN,GAMrD,OAJAzN,EAAMrC,QAAQ8P,GAAK,SAAmB5P,GACpC6C,EAAO7C,EAAG6C,EAAMN,MAGXM,I,6BCVTvF,EAAOD,QAAU,SAAuB4H,GAItC,MAAO,gCAAgCoI,KAAKpI,K,6BCH9C3H,EAAOD,QAAU,SAAqBqS,EAASG,GAC7C,OAAOA,EACHH,EAAQxN,QAAQ,OAAQ,IAAM,IAAM2N,EAAY3N,QAAQ,OAAQ,IAChEwN,I,6BCVN,IAAInI,EAAShI,EAAQ,GAQrB,SAASoM,EAAYmE,GACnB,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,gCAGtB,IAAIC,EACJxI,KAAKZ,QAAU,IAAIxC,SAAQ,SAAyBC,GAClD2L,EAAiB3L,KAGnB,IAAI4L,EAAQzI,KACZsI,GAAS,SAAgB5I,GACnB+I,EAAMN,SAKVM,EAAMN,OAAS,IAAIpI,EAAOL,GAC1B8I,EAAeC,EAAMN,YAOzBhE,EAAYxM,UAAUsQ,iBAAmB,WACvC,GAAIjI,KAAKmI,OACP,MAAMnI,KAAKmI,QAQfhE,EAAYuE,OAAS,WACnB,IAAIpJ,EAIJ,MAAO,CACLmJ,MAJU,IAAItE,GAAY,SAAkB/N,GAC5CkJ,EAASlJ,KAITkJ,OAAQA,IAIZxJ,EAAOD,QAAUsO,G,6BClCjBrO,EAAOD,QAAU,SAAgB8S,GAC/B,OAAO,SAAcC,GACnB,OAAOD,EAAStM,MAAM,KAAMuM,M,4ECJhC,MAAMC,EAAa,IAAIC,QAsDVC,EAAevS,GACN,mBAANA,GAAoBqS,EAAWG,IAAIxS,GClDtCyS,OAAyCrK,IAA1B9E,OAAOoP,qBAE3BtK,IADH9E,OAAOoP,eAAqCC,0BAwBpCC,EACT,SAACC,EAAiBC,GAAiD,IAA/BC,EAA+B,uDAAd,KACnD,KAAOD,IAAUC,GAAK,CACpB,MAAM/R,EAAI8R,EAAOE,YACjBH,EAAUI,YAAYH,GACtBA,EAAQ9R,ICPHkS,EAAW,GAKXC,EAAU,GC7BVC,EAAS,SAASC,OAAOC,KAAKC,UAAUC,MAAM,OAM9CC,EAAa,UAAOL,UAEpBM,EAAc,IAAI5C,OAAO,GAAGsC,KAAUK,KAU7C,MAAOE,EAIX,YAAYlQ,EAAwBmQ,GAH3B,KAAA/E,MAAwB,GAI/BrF,KAAKoK,QAAUA,EAEf,MAAMC,EAAwB,GACxBC,EAAgB,GAEhBC,EAASxQ,SAASyQ,iBACpBJ,EAAQK,QACR,IACA,MACA,GAIJ,IAAIC,EAAgB,EAChBC,GAAS,EACTC,EAAY,EAChB,MAAM,QAACC,EAASC,QAAQ,OAACrS,IAAWwB,EACpC,KAAO2Q,EAAYnS,GAAQ,CACzB,MAAMsS,EAAOR,EAAOS,WACpB,GAAa,OAATD,GAUJ,GAFAJ,IAEsB,IAAlBI,EAAKE,SAAwC,CAC/C,GAAKF,EAAiBG,gBAAiB,CACrC,MAAMC,EAAcJ,EAAiBI,YAC/B,OAAC1S,GAAU0S,EAMjB,IAAIC,EAAQ,EACZ,IAAK,IAAIrV,EAAI,EAAGA,EAAI0C,EAAQ1C,IACtBsV,EAASF,EAAWpV,GAAGO,KAlDH,UAmDtB8U,IAGJ,KAAOA,KAAU,GAAG,CAGlB,MAAME,EAAgBT,EAAQD,GAExBtU,EAAOiV,EAAuBC,KAAKF,GAAgB,GAMnDG,EACFnV,EAAKuI,cAlEe,QAmElB6M,EACDX,EAAiBY,aAAaF,GAClCV,EAAiBa,gBAAgBH,GAClC,MAAMI,EAAUH,EAAe7I,MAAMqH,GACrClK,KAAKqF,MAAM9B,KAAK,CAACuI,KAAM,YAAanB,QAAOrU,OAAMuU,QAASgB,IAC1DjB,GAAaiB,EAAQpT,OAAS,GAGA,aAA7BsS,EAAiBgB,UACpBzB,EAAM/G,KAAKwH,GACXR,EAAOyB,YAAejB,EAA6BN,cAEhD,GAAsB,IAAlBM,EAAKE,SAAqC,CACnD,MAAM5P,EAAQ0P,EAAc1P,KAC5B,GAAIA,EAAK0C,QAAQ6L,IAAW,EAAG,CAC7B,MAAMqC,EAASlB,EAAKmB,WACdrB,EAAUxP,EAAKwH,MAAMqH,GACrBiC,EAAYtB,EAAQpS,OAAS,EAGnC,IAAK,IAAI1C,EAAI,EAAGA,EAAIoW,EAAWpW,IAAK,CAClC,IAAIqW,EACAtU,EAAI+S,EAAQ9U,GAChB,GAAU,KAAN+B,EACFsU,EAASC,QACJ,CACL,MAAMhF,EAAQkE,EAAuBC,KAAK1T,GAC5B,OAAVuP,GAAkBgE,EAAShE,EAAM,GA9Ff,WA+FpBvP,EAAIA,EAAEkS,MAAM,EAAG3C,EAAMsD,OAAStD,EAAM,GAChCA,EAAM,GAAG2C,MAAM,GAhGC,QAgGwBvR,QAAU4O,EAAM,IAE9D+E,EAASrS,SAASuS,eAAexU,GAEnCmU,EAAOM,aAAaH,EAAQrB,GAC5B/K,KAAKqF,MAAM9B,KAAK,CAACuI,KAAM,OAAQnB,QAASA,IAIf,KAAvBE,EAAQsB,IACVF,EAAOM,aAAaF,IAAgBtB,GACpCV,EAAc9G,KAAKwH,IAElBA,EAAc1P,KAAOwP,EAAQsB,GAGhCvB,GAAauB,QAEV,GAAsB,IAAlBpB,EAAKE,SACd,GAAKF,EAAiB1P,OAASuO,EAAQ,CACrC,MAAMqC,EAASlB,EAAKmB,WAKS,OAAzBnB,EAAKyB,iBAA4B7B,IAAUD,IAC7CC,IACAsB,EAAOM,aAAaF,IAAgBtB,IAEtCL,EAAgBC,EAChB3K,KAAKqF,MAAM9B,KAAK,CAACuI,KAAM,OAAQnB,UAGN,OAArBI,EAAKvB,YACNuB,EAAiB1P,KAAO,IAEzBgP,EAAc9G,KAAKwH,GACnBJ,KAEFC,QACK,CACL,IAAI7U,GAAK,EACT,MAAgE,KAAxDA,EAAKgV,EAAiB1P,KAAK0C,QAAQ6L,EAAQ7T,EAAI,KAKrDiK,KAAKqF,MAAM9B,KAAK,CAACuI,KAAM,OAAQnB,OAAQ,IACvCC,UA9GJL,EAAOyB,YAAc1B,EAAMmC,MAqH/B,IAAK,MAAMjV,KAAK6S,EACd7S,EAAE0U,WAAYzC,YAAYjS,IAKhC,MAAM6T,EAAW,CAAC5Q,EAAaiS,KAC7B,MAAM/B,EAAQlQ,EAAIhC,OAASiU,EAAOjU,OAClC,OAAOkS,GAAS,GAAKlQ,EAAIuP,MAAMW,KAAW+B,GAwB/BC,EAAwB/L,IAAuC,IAAhBA,EAAK+J,MAIpD0B,EAAe,IAAMtS,SAAS6S,cAAc,IA4B5CrB,EACT,6ICjOE,MAAO,EAMX,YACIsB,EAAoBC,EACpBnK,GAPa,KAAAoK,QAAiC,GAQhD/M,KAAK6M,SAAWA,EAChB7M,KAAK8M,UAAYA,EACjB9M,KAAK2C,QAAUA,EAGjB,OAAOmI,GACL,IAAI/U,EAAI,EACR,IAAK,MAAM6K,KAAQZ,KAAK+M,aACTnO,IAATgC,GACFA,EAAKoM,SAASlC,EAAO/U,IAEvBA,IAEF,IAAK,MAAM6K,KAAQZ,KAAK+M,aACTnO,IAATgC,GACFA,EAAKqM,SAKX,SAuCE,MAAMC,EAAWjE,EACbjJ,KAAK6M,SAASzC,QAAQK,QAAQ0C,WAAU,GACxCpT,SAASqT,WAAWpN,KAAK6M,SAASzC,QAAQK,SAAS,GAEjDH,EAAgB,GAChBjF,EAAQrF,KAAK6M,SAASxH,MAEtBkF,EAASxQ,SAASyQ,iBACpB0C,EACA,IACA,MACA,GACJ,IAEItM,EAFAgK,EAAY,EACZyC,EAAY,EAEZtC,EAAOR,EAAOS,WAElB,KAAOJ,EAAYvF,EAAM5M,QAEvB,GADAmI,EAAOyE,EAAMuF,GACR+B,EAAqB/L,GAA1B,CASA,KAAOyM,EAAYzM,EAAK+J,OACtB0C,IACuB,aAAnBtC,EAAMuC,WACRhD,EAAM/G,KAAKwH,GACXR,EAAOyB,YAAejB,EAA6BN,SAElB,QAA9BM,EAAOR,EAAOS,cAKjBT,EAAOyB,YAAc1B,EAAMmC,MAC3B1B,EAAOR,EAAOS,YAKlB,GAAkB,SAAdpK,EAAKkL,KAAiB,CACxB,MAAMlL,EAAOZ,KAAK8M,UAAUS,qBAAqBvN,KAAK2C,SACtD/B,EAAK4M,gBAAgBzC,EAAMyB,iBAC3BxM,KAAK+M,QAAQxJ,KAAK3C,QAElBZ,KAAK+M,QAAQxJ,QAAQvD,KAAK8M,UAAUW,2BAChC1C,EAAiBnK,EAAKtK,KAAMsK,EAAKiK,QAAS7K,KAAK2C,UAErDiI,SAjCE5K,KAAK+M,QAAQxJ,UAAK3E,GAClBgM,IAuCJ,OAJI3B,IACFlP,SAAS2T,UAAUR,GACnBhE,eAAeyE,QAAQT,IAElBA,GCtIX,MAAMU,EAAgB,IAAIhE,KAMpB,MAAO,EAMX,YACIiB,EAA+BC,EAC/BgB,EAAcgB,GAChB9M,KAAK6K,QAAUA,EACf7K,KAAK8K,OAASA,EACd9K,KAAK8L,KAAOA,EACZ9L,KAAK8M,UAAYA,EAMnB,UACE,MAAM9W,EAAIgK,KAAK6K,QAAQpS,OAAS,EAChC,IAAIoV,EAAO,GACPC,GAAmB,EAEvB,IAAK,IAAI/X,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAC1B,MAAM+B,EAAIkI,KAAK6K,QAAQ9U,GAkBjBgY,EAAcjW,EAAEkW,YAAY,WAIlCF,GAAoBC,GAAe,GAAKD,KACG,IAAvChW,EAAEiG,QAAQ,SAAOgQ,EAAc,GAInC,MAAME,EAAiB1C,EAAuBC,KAAK1T,GAOjD+V,GANqB,OAAnBI,EAMMnW,GAAKgW,EAAmBF,EAAgB3D,GAKxCnS,EAAEuL,OAAO,EAAG4K,EAAetD,OAASsD,EAAe,GACvDA,EAAe,GFvDS,QEuDmBA,EAAe,GAC1DrE,EAIR,OADAiE,GAAQ7N,KAAK6K,QAAQ7U,GACd6X,EAGT,qBACE,MAAMhB,EAAW9S,SAASiM,cAAc,YAExC,OADA6G,EAASqB,UAAYlO,KAAKmO,UACnBtB,GC3EJ,MAAMuB,EAAepX,GAEZ,OAAVA,KACmB,iBAAVA,GAAuC,mBAAVA,GAE/BqX,EAAcrX,GAClBoF,MAAMlE,QAAQlB,OAEdA,IAAUA,EAAcF,OAAOwX,WAQlC,MAAOC,EAOX,YAAYnE,EAAkB9T,EAAcuU,GAF5C,KAAA2D,OAAQ,EAGNxO,KAAKoK,QAAUA,EACfpK,KAAK1J,KAAOA,EACZ0J,KAAK6K,QAAUA,EACf7K,KAAKqF,MAAQ,GACb,IAAK,IAAItP,EAAI,EAAGA,EAAI8U,EAAQpS,OAAS,EAAG1C,IACrCiK,KAAKqF,MAA0BtP,GAAKiK,KAAKyO,cAOpC,cACR,OAAO,IAAI,EAAczO,MAGjB,YACR,MAAM6K,EAAU7K,KAAK6K,QACf7U,EAAI6U,EAAQpS,OAAS,EAC3B,IAAIiW,EAAO,GAEX,IAAK,IAAI3Y,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAC1B2Y,GAAQ7D,EAAQ9U,GAChB,MAAM6K,EAAOZ,KAAKqF,MAAMtP,GACxB,QAAa6I,IAATgC,EAAoB,CACtB,MAAMsC,EAAItC,EAAK5J,MACf,GAAIoX,EAAYlL,KAAOmL,EAAWnL,GAChCwL,GAAqB,iBAANxL,EAAiBA,EAAI2G,OAAO3G,QAE3C,IAAK,MAAMjM,KAAKiM,EACdwL,GAAqB,iBAANzX,EAAiBA,EAAI4S,OAAO5S,IAOnD,OADAyX,GAAQ7D,EAAQ7U,GACT0Y,EAGT,SACM1O,KAAKwO,QACPxO,KAAKwO,OAAQ,EACbxO,KAAKoK,QAAQjE,aAAanG,KAAK1J,KAAM0J,KAAK2O,eAQ1C,MAAO,EAIX,YAAYC,GAFZ,KAAA5X,WAAiB4H,EAGfoB,KAAK4O,UAAYA,EAGnB,SAAS5X,GACHA,IAAU0S,GAAc0E,EAAYpX,IAAUA,IAAUgJ,KAAKhJ,QAC/DgJ,KAAKhJ,MAAQA,EAIR+R,EAAY/R,KACfgJ,KAAK4O,UAAUJ,OAAQ,IAK7B,SACE,KAAOzF,EAAY/I,KAAKhJ,QAAQ,CAC9B,MAAM6X,EAAY7O,KAAKhJ,MACvBgJ,KAAKhJ,MAAQ0S,EACbmF,EAAU7O,MAERA,KAAKhJ,QAAU0S,GAGnB1J,KAAK4O,UAAU3B,UAYb,MAAO,EAOX,YAAYtK,GAHZ,KAAA3L,WAAiB4H,EACT,KAAAkQ,oBAA0BlQ,EAGhCoB,KAAK2C,QAAUA,EAQjB,WAAW0G,GACTrJ,KAAK+O,UAAY1F,EAAU2F,YAAY3C,KACvCrM,KAAKiP,QAAU5F,EAAU2F,YAAY3C,KAUvC,gBAAgB6C,GACdlP,KAAK+O,UAAYG,EACjBlP,KAAKiP,QAAUC,EAAI1F,YAQrB,eAAe5I,GACbA,EAAKuO,SAASnP,KAAK+O,UAAY1C,KAC/BzL,EAAKuO,SAASnP,KAAKiP,QAAU5C,KAQ/B,gBAAgB6C,GACdA,EAAIC,SAASnP,KAAK+O,UAAY1C,KAC9BrM,KAAKiP,QAAUC,EAAID,QACnBC,EAAID,QAAUjP,KAAK+O,UAGrB,SAAS/X,GACPgJ,KAAK8O,eAAiB9X,EAGxB,SACE,KAAO+R,EAAY/I,KAAK8O,iBAAiB,CACvC,MAAMD,EAAY7O,KAAK8O,eACvB9O,KAAK8O,eAAiBpF,EACtBmF,EAAU7O,MAEZ,MAAMhJ,EAAQgJ,KAAK8O,eACf9X,IAAU0S,IAGV0E,EAAYpX,GACVA,IAAUgJ,KAAKhJ,OACjBgJ,KAAKoP,aAAapY,GAEXA,aAAiB,EAC1BgJ,KAAKqP,uBAAuBrY,GACnBA,aAAiBsY,KAC1BtP,KAAKuP,aAAavY,GACTqX,EAAWrX,GACpBgJ,KAAKwP,iBAAiBxY,GACbA,IAAU2S,GACnB3J,KAAKhJ,MAAQ2S,EACb3J,KAAKyP,SAGLzP,KAAKoP,aAAapY,IAId,SAAS+T,GACf/K,KAAKiP,QAAQ/C,WAAYK,aAAaxB,EAAM/K,KAAKiP,SAG3C,aAAajY,GACfgJ,KAAKhJ,QAAUA,IAGnBgJ,KAAKyP,QACLzP,KAAKmP,SAASnY,GACdgJ,KAAKhJ,MAAQA,GAGP,aAAaA,GACnB,MAAM+T,EAAO/K,KAAK+O,UAAUvF,YAItBkG,EACe,iBAJrB1Y,EAAiB,MAATA,EAAgB,GAAKA,GAIGA,EAAQ6S,OAAO7S,GAC3C+T,IAAS/K,KAAKiP,QAAQzC,iBACJ,IAAlBzB,EAAKE,SAINF,EAAc1P,KAAOqU,EAEtB1P,KAAKuP,aAAaxV,SAASuS,eAAeoD,IAE5C1P,KAAKhJ,MAAQA,EAGP,uBAAuBA,GAC7B,MAAM6V,EAAW7M,KAAK2C,QAAQgN,gBAAgB3Y,GAC9C,GAAIgJ,KAAKhJ,iBAAiB,GACtBgJ,KAAKhJ,MAAM6V,WAAaA,EAC1B7M,KAAKhJ,MAAM4Y,OAAO5Y,EAAM8T,YACnB,CAKL,MAAM7G,EACF,IAAI,EAAiB4I,EAAU7V,EAAM8V,UAAW9M,KAAK2C,SACnDuK,EAAWjJ,EAAS4L,SAC1B5L,EAAS2L,OAAO5Y,EAAM8T,QACtB9K,KAAKuP,aAAarC,GAClBlN,KAAKhJ,MAAQiN,GAIT,iBAAiBjN,GAWlBoF,MAAMlE,QAAQ8H,KAAKhJ,SACtBgJ,KAAKhJ,MAAQ,GACbgJ,KAAKyP,SAKP,MAAMK,EAAY9P,KAAKhJ,MACvB,IACI+Y,EADAnF,EAAY,EAGhB,IAAK,MAAMrJ,KAAQvK,EAEjB+Y,EAAWD,EAAUlF,QAGJhM,IAAbmR,IACFA,EAAW,IAAI,EAAS/P,KAAK2C,SAC7BmN,EAAUvM,KAAKwM,GACG,IAAdnF,EACFmF,EAASC,eAAehQ,MAExB+P,EAASE,gBAAgBH,EAAUlF,EAAY,KAGnDmF,EAAS/C,SAASzL,GAClBwO,EAAS9C,SACTrC,IAGEA,EAAYkF,EAAUrX,SAExBqX,EAAUrX,OAASmS,EACnB5K,KAAKyP,MAAMM,GAAYA,EAASd,UAIpC,QAAsC,IAAhCF,EAAgC,uDAAd/O,KAAK+O,UAC3B3F,EACIpJ,KAAK+O,UAAU7C,WAAa6C,EAAUvF,YAAcxJ,KAAKiP,UAW3D,MAAO,EAOX,YAAY7E,EAAkB9T,EAAcuU,GAC1C,GAJF,KAAA7T,WAAiB4H,EACT,KAAAkQ,oBAA0BlQ,EAGT,IAAnBiM,EAAQpS,QAA+B,KAAfoS,EAAQ,IAA4B,KAAfA,EAAQ,GACvD,MAAM,IAAIhL,MACN,2DAENG,KAAKoK,QAAUA,EACfpK,KAAK1J,KAAOA,EACZ0J,KAAK6K,QAAUA,EAGjB,SAAS7T,GACPgJ,KAAK8O,eAAiB9X,EAGxB,SACE,KAAO+R,EAAY/I,KAAK8O,iBAAiB,CACvC,MAAMD,EAAY7O,KAAK8O,eACvB9O,KAAK8O,eAAiBpF,EACtBmF,EAAU7O,MAEZ,GAAIA,KAAK8O,iBAAmBpF,EAC1B,OAEF,MAAM1S,IAAUgJ,KAAK8O,eACjB9O,KAAKhJ,QAAUA,IACbA,EACFgJ,KAAKoK,QAAQjE,aAAanG,KAAK1J,KAAM,IAErC0J,KAAKoK,QAAQwB,gBAAgB5L,KAAK1J,MAEpC0J,KAAKhJ,MAAQA,GAEfgJ,KAAK8O,eAAiBpF,GAapB,MAAOwG,UAA0B3B,EAGrC,YAAYnE,EAAkB9T,EAAcuU,GAC1CsF,MAAM/F,EAAS9T,EAAMuU,GACrB7K,KAAKoQ,OACmB,IAAnBvF,EAAQpS,QAA+B,KAAfoS,EAAQ,IAA4B,KAAfA,EAAQ,GAGlD,cACR,OAAO,IAAIwF,EAAarQ,MAGhB,YACR,OAAIA,KAAKoQ,OACApQ,KAAKqF,MAAM,GAAGrO,MAEhBmZ,MAAMxB,YAGf,SACM3O,KAAKwO,QACPxO,KAAKwO,OAAQ,EAEZxO,KAAKoK,QAAgBpK,KAAK1J,MAAQ0J,KAAK2O,cAKxC,MAAO0B,UAAqB,GAMlC,IAAIC,GAAwB,EAE5B,IACE,MAAM3N,EAAU,CACd,cAEE,OADA2N,GAAwB,GACjB,IAIXxW,OAAOkF,iBAAiB,OAAQ2D,EAAgBA,GAEhD7I,OAAOyW,oBAAoB,OAAQ5N,EAAgBA,GACnD,MAAO6N,IAMH,MAAO,EASX,YAAYpG,EAAkBqG,EAAmBC,GALjD,KAAA1Z,WAA2C4H,EAEnC,KAAAkQ,oBAAoDlQ,EAI1DoB,KAAKoK,QAAUA,EACfpK,KAAKyQ,UAAYA,EACjBzQ,KAAK0Q,aAAeA,EACpB1Q,KAAK2Q,mBAAsBjV,GAAMsE,KAAK4Q,YAAYlV,GAGpD,SAAS1E,GACPgJ,KAAK8O,eAAiB9X,EAGxB,SACE,KAAO+R,EAAY/I,KAAK8O,iBAAiB,CACvC,MAAMD,EAAY7O,KAAK8O,eACvB9O,KAAK8O,eAAiBpF,EACtBmF,EAAU7O,MAEZ,GAAIA,KAAK8O,iBAAmBpF,EAC1B,OAGF,MAAMmH,EAAc7Q,KAAK8O,eACnBgC,EAAc9Q,KAAKhJ,MACnB+Z,EAAsC,MAAfF,GACV,MAAfC,IACKD,EAAYG,UAAYF,EAAYE,SACpCH,EAAYI,OAASH,EAAYG,MACjCJ,EAAYK,UAAYJ,EAAYI,SACvCC,EACa,MAAfN,IAAuC,MAAfC,GAAuBC,GAE/CA,GACF/Q,KAAKoK,QAAQmG,oBACTvQ,KAAKyQ,UAAWzQ,KAAK2Q,mBAAoB3Q,KAAKoR,WAEhDD,IACFnR,KAAKoR,UAAYC,EAAWR,GAC5B7Q,KAAKoK,QAAQpL,iBACTgB,KAAKyQ,UAAWzQ,KAAK2Q,mBAAoB3Q,KAAKoR,YAEpDpR,KAAKhJ,MAAQ6Z,EACb7Q,KAAK8O,eAAiBpF,EAGxB,YAAY4H,GACgB,mBAAftR,KAAKhJ,MACdgJ,KAAKhJ,MAAMd,KAAK8J,KAAK0Q,cAAgB1Q,KAAKoK,QAASkH,GAElDtR,KAAKhJ,MAA8B4Z,YAAYU,IAQtD,MAAMD,EAAc7a,GAAyCA,IACxD8Z,EACI,CAACU,QAASxa,EAAEwa,QAASE,QAAS1a,EAAE0a,QAASD,KAAMza,EAAEya,MACjDza,EAAEwa,SCvcJ,MAAMO,EAA2B,IApClC,MAUJ,2BACInH,EAAkB9T,EAAcuU,EAChClI,GACF,MAAM6O,EAASlb,EAAK,GACpB,GAAe,MAAXkb,EAAgB,CAElB,OADkB,IAAItB,EAAkB9F,EAAS9T,EAAK0T,MAAM,GAAIa,GAC/CxF,MAEnB,MAAe,MAAXmM,EACK,CAAC,IAAI,EAAUpH,EAAS9T,EAAK0T,MAAM,GAAIrH,EAAQ+N,eAEzC,MAAXc,EACK,CAAC,IAAI,EAAqBpH,EAAS9T,EAAK0T,MAAM,GAAIa,IAEzC,IAAI0D,EAAmBnE,EAAS9T,EAAMuU,GACvCxF,MAMnB,qBAAqB1C,GACnB,OAAO,IAAI,EAASA,KCXlB,SAAUgN,EAAgB1V,GAC9B,IAAIwX,EAAgBC,EAAe9a,IAAIqD,EAAO6R,WACxBlN,IAAlB6S,IACFA,EAAgB,CACdE,aAAc,IAAI7I,QAClB8I,UAAW,IAAIC,KAEjBH,EAAeI,IAAI7X,EAAO6R,KAAM2F,IAGlC,IAAI5E,EAAW4E,EAAcE,aAAa/a,IAAIqD,EAAO4Q,SACrD,QAAiBjM,IAAbiO,EACF,OAAOA,EAKT,MAAMvV,EAAM2C,EAAO4Q,QAAQjH,KAAKgG,GAahC,OAVAiD,EAAW4E,EAAcG,UAAUhb,IAAIU,QACtBsH,IAAbiO,IAEFA,EAAW,IAAI1C,EAASlQ,EAAQA,EAAO8X,sBAEvCN,EAAcG,UAAUE,IAAIxa,EAAKuV,IAInC4E,EAAcE,aAAaG,IAAI7X,EAAO4Q,QAASgC,GACxCA,EAkBF,MAAM6E,EAAiB,IAAIG,ICxErB,EAAQ,IAAI/I,SCmCxBhP,OAAM,kBAAwBA,OAAM,gBAAsB,KAAKyJ,KAAK,SAM9D,MAAM,EAAO,SAACsH,GAAD,2BAAmCC,EAAnC,iCAAmCA,EAAnC,yBAChB,IAAI,EAAeD,EAASC,EAAQ,OAAQyG,IC3B1C,SAAUS,EACZnF,EAAoBxC,GACtB,MAAOD,SAAS,QAACK,GAAX,MAAqBpF,GAASwH,EAC9BtC,EACFxQ,SAASyQ,iBAAiBC,EAtBP,IAsBkC,MAAM,GAC/D,IAAIG,EAAY,EAA+BvF,GAC3CzE,EAAOyE,EAAMuF,GACbyC,GAAa,EACb4E,EAAc,EAClB,MAAMC,EAA0B,GAChC,IAAIC,EAAiC,KACrC,KAAO5H,EAAOS,YAAY,CACxBqC,IACA,MAAMtC,EAAOR,EAAOyB,YAiBpB,IAfIjB,EAAKyB,kBAAoB2F,IAC3BA,EAAsB,MAGpB9H,EAAcrB,IAAI+B,KACpBmH,EAAwB3O,KAAKwH,GAED,OAAxBoH,IACFA,EAAsBpH,IAIE,OAAxBoH,GACFF,SAEcrT,IAATgC,GAAsBA,EAAK+J,QAAU0C,GAG1CzM,EAAK+J,MAAgC,OAAxBwH,GAAgC,EAAIvR,EAAK+J,MAAQsH,EAE9DrH,EAAY,EAA+BvF,EAAOuF,GAClDhK,EAAOyE,EAAMuF,GAGjBsH,EAAwB5Z,QAASd,GAAMA,EAAE0U,WAAYzC,YAAYjS,IAGnE,MAAM4a,EAAcrH,IAClB,IAAIK,EAA2B,KAAlBL,EAAKE,SAAqD,EAAI,EAC3E,MAAMV,EAASxQ,SAASyQ,iBAAiBO,EA9DlB,IA8D0C,MAAM,GACvE,KAAOR,EAAOS,YACZI,IAEF,OAAOA,GAGH,EACF,SAAC/F,GAAkD,IAA3BgN,EAA2B,wDAAL,EAC5C,IAAK,IAAItc,EAAIsc,EAAa,EAAGtc,EAAIsP,EAAM5M,OAAQ1C,IAAK,CAClD,MAAM6K,EAAOyE,EAAMtP,GACnB,GAAI4W,EAAqB/L,GACvB,OAAO7K,EAGX,OAAQ,GC3Dd,MAAMuc,EAAsB,CAACxG,EAAcyG,IACvC,GAAGzG,MAASyG,IAEhB,IAAIC,GAA4B,OAED,IAApB1Y,OAAO2Y,SAChBD,GAA4B,OAC2B,IAAvC1Y,OAAO2Y,SAASC,qBAChCC,QAAQC,KACJ,6IAGJJ,GAA4B,GAO9B,MAAMK,EAAwBN,GACzBtY,IACC,MAAM6Y,EAAWR,EAAoBrY,EAAO6R,KAAMyG,GAClD,IAAId,EAAgBC,EAAe9a,IAAIkc,QACjBlU,IAAlB6S,IACFA,EAAgB,CACdE,aAAc,IAAI7I,QAClB8I,UAAW,IAAIC,KAEjBH,EAAeI,IAAIgB,EAAUrB,IAG/B,IAAI5E,EAAW4E,EAAcE,aAAa/a,IAAIqD,EAAO4Q,SACrD,QAAiBjM,IAAbiO,EACF,OAAOA,EAGT,MAAMvV,EAAM2C,EAAO4Q,QAAQjH,KAAKgG,GAEhC,GADAiD,EAAW4E,EAAcG,UAAUhb,IAAIU,QACtBsH,IAAbiO,EAAwB,CAC1B,MAAMzC,EAAUnQ,EAAO8X,qBACnBS,GACF1Y,OAAO2Y,SAAUC,mBAAmBtI,EAASmI,GAE/C1F,EAAW,IAAI1C,EAASlQ,EAAQmQ,GAChCqH,EAAcG,UAAUE,IAAIxa,EAAKuV,GAGnC,OADA4E,EAAcE,aAAaG,IAAI7X,EAAO4Q,QAASgC,GACxCA,GAGPkG,EAAiB,CAAC,OAAQ,OAsB1BC,EAAiB,IAAIC,IAgBrBC,EACF,CAACX,EAAmBY,EAA+BtG,KACjDmG,EAAeI,IAAIb,GAInB,MAAMc,EACAxG,EAAWA,EAASzC,QAAUrQ,SAASiM,cAAc,YAErDsN,EAASH,EAAYI,iBAAiB,UACtC,OAAC9a,GAAU6a,EAEjB,GAAe,IAAX7a,EAYF,YADAqB,OAAO2Y,SAAUS,sBAAsBG,EAAiBd,GAG1D,MAAMiB,EAAiBzZ,SAASiM,cAAc,SAM9C,IAAK,IAAIjQ,EAAI,EAAGA,EAAI0C,EAAQ1C,IAAK,CAC/B,MAAM0d,EAAQH,EAAOvd,GACrB0d,EAAMvH,WAAYzC,YAAYgK,GAC9BD,EAAeE,aAAgBD,EAAMC,YApEPnB,KACpCQ,EAAeza,QAASwT,IACtB,MAAM6H,EAAYjC,EAAe9a,IAAI0b,EAAoBxG,EAAMyG,SAC7C3T,IAAd+U,GACFA,EAAU/B,UAAUtZ,QAASuU,IAC3B,MAAOzC,SAAS,QAACK,IAAYoC,EAEvByG,EAAS,IAAIL,IACnB7W,MAAMwX,KAAKnJ,EAAQ8I,iBAAiB,UAAUjb,QAASR,IACrDwb,EAAOF,IAAItb,KAEbka,EAAwBnF,EAAUyG,QA4DpCO,CAA6BtB,GAG7B,MAAM9H,EAAU4I,EAAgB5I,QAC1BoC,ED/DN,SACFA,EAAoB9B,GAAqC,IAAzB+I,EAAyB,uDAAJ,KACvD,MAAO1J,SAAS,QAACK,GAAX,MAAqBpF,GAASwH,EAGpC,GAAIiH,QAEF,YADArJ,EAAQuE,YAAYjE,GAGtB,MAAMR,EACFxQ,SAASyQ,iBAAiBC,EA/FP,IA+FkC,MAAM,GAC/D,IAAIG,EAAY,EAA+BvF,GAC3C0O,EAAc,EACdC,GAAe,EACnB,KAAOzJ,EAAOS,YAAY,CAOxB,IANAgJ,IACmBzJ,EAAOyB,cACP8H,IACjBC,EAAc3B,EAAWrH,GACzB+I,EAAQ5H,WAAYK,aAAaxB,EAAM+I,KAEnB,IAAflJ,GAAoBvF,EAAMuF,GAAWD,QAAUqJ,GAAa,CAEjE,GAAID,EAAc,EAAG,CACnB,MAAsB,IAAfnJ,GACLvF,EAAMuF,GAAWD,OAASoJ,EAC1BnJ,EAAY,EAA+BvF,EAAOuF,GAEpD,OAEFA,EAAY,EAA+BvF,EAAOuF,KCkChDqJ,CAAuBpH,EAAU2G,EAAgB/I,EAAQyJ,YAEzDzJ,EAAQ8B,aAAaiH,EAAgB/I,EAAQyJ,YAK/Cpa,OAAO2Y,SAAUS,sBAAsBG,EAAiBd,GACxD,MAAMkB,EAAQhJ,EAAQ0J,cAAc,SACpC,GAAIra,OAAO2Y,SAAU2B,cAA0B,OAAVX,EAGnCN,EAAY5G,aAAakH,EAAMtG,WAAU,GAAOgG,EAAYe,iBACvD,GAAMrH,EAAU,CASrBpC,EAAQ8B,aAAaiH,EAAgB/I,EAAQyJ,YAC7C,MAAMG,EAAU,IAAIpB,IACpBoB,EAAQjB,IAAII,GACZxB,EAAwBnF,EAAUwH,K,cC6OrC,gB,aAMD,GAAK,EAAU,KAAG,4B,8BAqUjB,S,OACO,KAEV,OAAC,UAED,iB,EA/gBG,gB,OACH,GAAW,SAAkB,aA7N/Bva,OAAOwa,0BACH,CAAwB/R,EAASgS,IAAqBhS,EA8GnD,MAAMiS,EAA8C,CAEzD,YAAYxd,EAAgB8U,GAC1B,OAAQA,GACN,KAAK2I,QACH,OAAOzd,EAAQ,GAAK,KACtB,KAAKP,OACL,KAAK2F,MAGH,OAAgB,MAATpF,EAAgBA,EAAQsE,KAAKC,UAAUvE,GAElD,OAAOA,GAGT,cAAcA,EAAoB8U,GAChC,OAAQA,GACN,KAAK2I,QACH,OAAiB,OAAVzd,EACT,KAAK0d,OACH,OAAiB,OAAV1d,EAAiB,KAAO0d,OAAO1d,GACxC,KAAKP,OACL,KAAK2F,MACH,OAAOd,KAAKG,MAAMzE,GAEtB,OAAOA,IAaE2d,EAAuB,CAAC3d,EAAgB4d,IAE5CA,IAAQ5d,IAAU4d,GAAQA,GAAO5d,GAAUA,GAG9C6d,EAAkD,CACtDC,WAAW,EACXhJ,KAAMjC,OACNkL,UAAWP,EACXQ,SAAS,EACTC,WAAYN,GAGRO,EAAmBtY,QAAQC,SAAQ,GAwBnC,MAAgBsY,UAAwBC,YAqO5C,cACEjF,QAlBM,KAAAkF,aAA4B,EAC5B,KAAAC,yBAAgD1W,EAChD,KAAA2W,eAAmCL,EACnC,KAAAM,2BAAgD5W,EAMhD,KAAA6W,mBAAqC,IAAI5D,IAKzC,KAAA6D,2BACQ9W,EAIdoB,KAAK2V,aApMP,gCAEE3V,KAAK4V,WACL,MAAMzK,EAAuB,GAU7B,OAPAnL,KAAK6V,iBAAkBvd,QAAQ,CAAC4K,EAAGrL,KACjC,MAAMie,EAAO9V,KAAK+V,0BAA0Ble,EAAGqL,QAClCtE,IAATkX,IACF9V,KAAKgW,wBAAwBlE,IAAIgE,EAAMje,GACvCsT,EAAW5H,KAAKuS,MAGb3K,EASD,gCAEN,IAAKnL,KAAKpI,eACF0c,0BAA0B,mBAAoBtU,OAAQ,CAC5DA,KAAK6V,iBAAmB,IAAIhE,IAE5B,MAAMoE,EACFxf,OAAOyf,eAAelW,MAAM6V,sBACRjX,IAApBqX,GACFA,EAAgB3d,QACZ,CAAC4K,EAAwBlC,IACrBhB,KAAK6V,iBAAkB/D,IAAI9Q,EAAGkC,KAY5C,sBACI5M,GACyD,IAAzDqM,EAAyD,uDAA1BkS,EAWjC,GAPA7U,KAAKmW,yBACLnW,KAAK6V,iBAAkB/D,IAAIxb,EAAMqM,GAM7BA,EAAQyT,YAAcpW,KAAKrI,UAAUC,eAAetB,GACtD,OAEF,MAAMgB,EAAsB,iBAAThB,EAAoBQ,SAAW,KAAKR,IACvDG,OAAOC,eAAesJ,KAAKrI,UAAWrB,EAAM,CAE1C,MACE,OAAQ0J,KAAkC1I,IAE5C,IAA2BN,GACzB,MAAMqf,EACDrW,KAAwC1J,GAC5C0J,KAAwC1I,GAAiBN,EACzDgJ,KAAoCsW,eAAehgB,EAAM+f,IAE5DE,cAAc,EACd5f,YAAY,IASN,kBAER,MAAM6f,EAAY/f,OAAOyf,eAAelW,MAYxC,GAXKwW,EAAU5e,eAhID,cAiIZ4e,EAAUZ,WAEZ5V,KAAA,WAAkB,EAClBA,KAAKmW,yBAELnW,KAAKgW,wBAA0B,IAAInE,IAK/B7R,KAAKpI,eAAe0c,0BAA0B,aAActU,OAAQ,CACtE,MAAMyW,EAAQzW,KAAK0W,WAEbC,EAAW,IACZlgB,OAAOmgB,oBAAoBH,MACc,mBAAjChgB,OAAOogB,sBACdpgB,OAAOogB,sBAAsBJ,GAC7B,IAGN,IAAK,MAAM5e,KAAK8e,EAId3W,KAAK8W,eAAejf,EAAI4e,EAAc5e,KASpC,iCACJvB,EAAmBqM,GACrB,MAAMmS,EAAYnS,EAAQmS,UAC1B,OAAqB,IAAdA,OACHlW,EACsB,iBAAdkW,EACHA,EACiB,iBAATxe,EAAoBA,EAAKuI,mBAAgBD,EASpD,wBACJ5H,EAAgB4d,GAClB,OADiE,uDAARD,GACvC3d,EAAO4d,GASnB,mCACJ5d,EAAoB2L,GACtB,MAAMmJ,EAAOnJ,EAAQmJ,KACfiJ,EAAYpS,EAAQoS,WAAaP,EACjCuC,EACoB,mBAAdhC,EAA2BA,EAAYA,EAAUgC,cAC7D,OAAOA,EAAgBA,EAAc/f,EAAO8U,GAAQ9U,EAW9C,iCACJA,EAAgB2L,GAClB,QAAwB/D,IAApB+D,EAAQqS,QACV,OAEF,MAAMlJ,EAAOnJ,EAAQmJ,KACfiJ,EAAYpS,EAAQoS,UAI1B,OAFIA,GAAcA,EAAwCiC,aACtDxC,EAAiBwC,aACDhgB,EAAO8U,GA6BnB,aACR9L,KAAKiX,0BAGLjX,KAAKsW,iBAeC,0BAGLtW,KAAKyE,YACDoR,iBAAkBvd,QAAQ,CAAC4e,EAAIrf,KAC9B,GAAImI,KAAKpI,eAAeC,GAAI,CAC1B,MAAMb,EAAQgJ,KAAKnI,UACZmI,KAAKnI,GACPmI,KAAKsV,sBACRtV,KAAKsV,oBAAsB,IAAIzD,KAEjC7R,KAAKsV,oBAAoBxD,IAAIja,EAAGb,MAQlC,2BAINgJ,KAAKsV,oBAAqBhd,QAAQ,CAAC4K,EAAGrL,IAAOmI,KAAanI,GAAKqL,GAC/DlD,KAAKsV,yBAAsB1W,EAG7B,oBACEoB,KAAKqV,aA/SmB,GA+SJrV,KAAKqV,aAKrBrV,KAAKwV,wBACPxV,KAAKwV,wBACLxV,KAAKwV,2BAAwB5W,GASjC,wBAMA,yBAAyBtI,EAAcse,EAAkB5d,GACnD4d,IAAQ5d,GACVgJ,KAAKmX,qBAAqB7gB,EAAMU,GAI5B,qBACJV,EAAmBU,GACsC,IAAzD2L,EAAyD,uDAA1BkS,EACjC,MAAMuC,EAAQpX,KAAKyE,YACbqR,EAAOsB,EAAKrB,0BAA0Bzf,EAAMqM,GAClD,QAAa/D,IAATkX,EAAoB,CACtB,MAAMuB,EAAYD,EAAKE,0BAA0BtgB,EAAO2L,GAExD,QAAkB/D,IAAdyY,EACF,OAUFrX,KAAKqV,aAhW8B,EAgWfrV,KAAKqV,aACR,MAAbgC,EACFrX,KAAK4L,gBAAgBkK,GAErB9V,KAAKmG,aAAa2P,EAAMuB,GAG1BrX,KAAKqV,cAAmC,EAApBrV,KAAKqV,cAIrB,qBAAqB/e,EAAcU,GAGzC,GA9WqC,EA8WjCgJ,KAAKqV,aACP,OAEF,MAAM+B,EAAQpX,KAAKyE,YACb8S,EAAWH,EAAKpB,wBAAwBpf,IAAIN,GAClD,QAAiBsI,IAAb2Y,EAAwB,CAC1B,MAAM5U,EACFyU,EAAKvB,iBAAkBjf,IAAI2gB,IAAa1C,EAE5C7U,KAAKqV,aAtX6B,GAsXdrV,KAAKqV,aACzBrV,KAAKuX,GAEDH,EAAKI,4BAA4BxgB,EAAO2L,GAE5C3C,KAAKqV,cAAmC,GAApBrV,KAAKqV,cASrB,eAAe/e,EAAoB+f,GACzC,IAAIoB,GAAsB,EAE1B,QAAa7Y,IAATtI,EAAoB,CACtB,MAAM8gB,EAAOpX,KAAKyE,YACZ9B,EACFyU,EAAKvB,iBAAkBjf,IAAIN,IAASue,EACpCuC,EAAKM,iBACD1X,KAAK1J,GAAqB+f,EAAU1T,EAAQsS,aAC7CjV,KAAKyV,mBAAmBzM,IAAI1S,IAC/B0J,KAAKyV,mBAAmB3D,IAAIxb,EAAM+f,IAMZ,IAApB1T,EAAQqS,SApZoB,GAqZ1BhV,KAAKqV,oBAC0BzW,IAA/BoB,KAAK0V,wBACP1V,KAAK0V,sBAAwB,IAAI7D,KAEnC7R,KAAK0V,sBAAsB5D,IAAIxb,EAAMqM,KAIvC8U,GAAsB,GAGrBzX,KAAK2X,qBAAuBF,GAC/BzX,KAAK4X,iBAiBT,cAActhB,EAAoB+f,GAEhC,OADArW,KAAKsW,eAAehgB,EAAM+f,GACnBrW,KAAK6X,eAMA,iBAvayC,QAyarD7X,KAzaqD,OAmgBtD,gB,GAEO,E,OACN,EAAK,OAAkB,IAEzB,I,IAEA,uB,wDA1gBuD,aA0arD,IAAInD,EACAC,EAFJ,EAAKuY,aA9bsB,EA8bP,EAAKA,aAGzB,MAAMyC,EAAwB,EAAKvC,eALT,OAM1B,EAAKA,eAAiB,IAAI3Y,QAAQ,CAACmb,EAAKC,KACtCnb,EAAUkb,EACVjb,EAASkb,I,SA3NL,EAA8B,K,SAE9B,OAAmC,G,GAG3C,S,sBAGG,eA2MyB,iBAUtB,SAGIF,KAbkB,sB,EAAA,kCAuBxB,MAAM7d,EAAS,EAAKge,gBADlB,O,oDAAA,gBAKY,MAAVhe,EALF,SAMMA,SA5BgB,SA8BjByB,GACPoB,EAAOpB,OA/BiB,WAiC1BmB,GAAS,EAAK8a,0BAgFb,EAjHyB,eAmBrB,EAAKO,cAnBgB,SAoBlB,IAAItb,QAASmb,GAAQ,EAAKvC,sBAAwBuC,IA6FzD,KACC,EAAc,KAChB,EAAO,KAAK,GAGd,K,MALG,SA7EH,oBACE,OA9dwB,GA8dhB/X,KAAKqV,aAGf,0BACE,OAre2B,EAqenBrV,KAAKqV,aAGf,iBACE,OA1esB,EA0edrV,KAAKqV,aAmBL,gBAEJrV,KAAKsV,qBACPtV,KAAKmY,2BAEP,IAAIC,GAAe,EACnB,MAAMC,EAAoBrY,KAAKyV,mBAC/B,IACE2C,EAAepY,KAAKoY,aAAaC,GAC7BD,GACFpY,KAAK4P,OAAOyI,GAEd,MAAO3c,GAIP,MADA0c,GAAe,EACT1c,EATR,QAYEsE,KAAKsY,eAEHF,IAlhBkB,EAmhBdpY,KAAKqV,eACTrV,KAAKqV,aAphBa,EAohBErV,KAAKqV,aACzBrV,KAAKuY,aAAaF,IAEpBrY,KAAKwY,QAAQH,IAIT,eACNrY,KAAKyV,mBAAqB,IAAI5D,IAC9B7R,KAAKqV,cAAmC,EAApBrV,KAAKqV,aAkB3B,qBACE,OAAOrV,KAAKyY,qBAmBJ,qBACR,OAAOzY,KAAKuV,eAUJ,aAAaE,GACrB,OAAO,EAWC,OAAOA,QACoB7W,IAA/BoB,KAAK0V,uBACL1V,KAAK0V,sBAAsBgD,KAAO,IAGpC1Y,KAAK0V,sBAAsBpd,QACvB,CAAC4K,EAAGlC,IAAMhB,KAAK2Y,qBAAqB3X,EAAGhB,KAAKgB,GAAkBkC,IAClElD,KAAK0V,2BAAwB9W,GAavB,QAAQ6W,IAYR,aAAaA,KAnlBP,aAAc,ECrChC,MC/KamD,GACR,uBAAwBC,SAASlhB,WACjC,YAAamhB,cAAcnhB,UAENb,UCkBzBgD,OAAM,qBAA2BA,OAAM,mBAAyB,KAC5DyJ,KAAK,SAuBV,MAAMwV,GAAiBzF,GACnBA,EAAO0F,KAAO1F,EAAO0F,KAAKC,KAf9B,SAASC,EACL5F,GAAgD,IAAxBrZ,EAAwB,uDAAF,GAChD,IAAK,IAAIlE,EAAI,EAAG0C,EAAS6a,EAAO7a,OAAQ1C,EAAI0C,EAAQ1C,IAAK,CACvD,MAAMiB,EAAQsc,EAAOvd,GACjBqG,MAAMlE,QAAQlB,GAChBkiB,EAAUliB,EAAOiD,GAEjBA,EAAOsJ,KAAKvM,GAGhB,OAAOiD,EAKiCif,CAAU5F,GAE9C,MAAO,WAAmB6B,EA6BpB,kBAGRhF,MAAMyF,SAAS1f,KAAK8J,MAGpBA,KAAKmZ,QACDnZ,KAAKpI,eAAe0c,0BAA0B,SAAUtU,OACxDA,KAAKoZ,mBACLpZ,KAAKmZ,SAAW,GAId,0BAON,MAAME,EAAarZ,KAAKsT,OAClBA,EAAsB,GAC5B,GAAIlX,MAAMlE,QAAQmhB,GAAa,CACVN,GAAcM,GAMLC,YAAY,CAACxH,EAAKha,KAC5Cga,EAAIsB,IAAItb,GAEDga,GACN,IAAImB,KAEE3a,QAAS4K,GAAMoQ,EAAOvO,QAAQ7B,SAC9BmW,GACT/F,EAAO/P,KAAK8V,GAEd,OAAO/F,EAgBC,aACRnD,MAAMwF,aACL3V,KAAkDuZ,WAC/CvZ,KAAKwZ,mBAIL1f,OAAO2f,YAAczZ,KAAKuZ,sBAAsBzf,OAAO2f,YACzDzZ,KAAK0Z,cAWC,mBACR,OAAO1Z,KAAK2Z,aAAa,CAACziB,KAAM,SAYxB,cACR,MAAMoc,EAAUtT,KAAKyE,YAAkC0U,QACjC,IAAlB7F,EAAO7a,cAQamG,IAApB9E,OAAO2Y,UAA2B3Y,OAAO2Y,SAAS2B,aAG3CwE,GACR5Y,KAAKuZ,WAA0BK,mBAC5BtG,EAAOvS,IAAKjJ,GAAMA,EAAE+hB,YAIxB7Z,KAAK8Z,8BAA+B,EARpChgB,OAAO2Y,SAASsH,YAAaC,sBACzB1G,EAAOvS,IAAKjJ,GAAMA,EAAEmiB,SAAUja,KAAKka,YAW3C,oBACE/J,MAAMgK,oBAGFna,KAAKoa,iBAAkCxb,IAApB9E,OAAO2Y,UAC5B3Y,OAAO2Y,SAAS4H,aAAara,MAUvB,OAAOqY,GACflI,MAAMP,OAAOyI,GACb,MAAMiC,EAAiBta,KAAKua,SACxBD,aAA0B,GAC3Bta,KAAKyE,YACD8V,OACGD,EACAta,KAAKuZ,WACL,CAAChH,UAAWvS,KAAKka,UAAWxJ,aAAc1Q,OAKhDA,KAAK8Z,+BACP9Z,KAAK8Z,8BAA+B,EACnC9Z,KAAKyE,YAAkC0U,QAAS7gB,QAASR,IACxD,MAAM2b,EAAQ1Z,SAASiM,cAAc,SACrCyN,EAAMC,YAAc5b,EAAEmiB,QACtBja,KAAKuZ,WAAWvK,YAAYyE,MAUxB,WA7KM,cAAgB,EASzB,GAAA8G,OJqLL,CAACtgB,EACAoP,EACA1G,KACC,IAAKA,GAA8B,iBAAZA,IAAyBA,EAAQ4P,UACtD,MAAM,IAAI1S,MAAM,uCAElB,MAAM0S,EAAY5P,EAAQ4P,UACpBiI,EAAc,EAAMxR,IAAIK,GACxBoR,EAAejI,GACM,KAAvBnJ,EAAU4B,YACP5B,EAAyBhD,KAE1BqU,EAAmBD,IAAiBzH,EAAehK,IAAIuJ,GAGvDoI,EACFD,EAAmB3gB,SAAS6gB,yBAA2BvR,EAe3D,GHzPF,EAACpP,EACAoP,EACA1G,KACC,IAAI/B,EAAO,EAAMhK,IAAIyS,QACRzK,IAATgC,IACFwI,EAAYC,EAAWA,EAAU6K,YACjC,EAAMpC,IAAIzI,EAAWzI,EAAO,IAAI,EAAQ,eACjB+O,mBACGhN,KAE1B/B,EAAKia,WAAWxR,IAElBzI,EAAKoM,SAAS/S,GACd2G,EAAKqM,UG8NL,CACIhT,EACA0gB,EACA,eAAChL,gBAAiBkD,EAAqBN,IAAe5P,IAWtD+X,EAAkB,CACpB,MAAM9Z,EAAO,EAAMhK,IAAI+jB,GACvB,EAAMG,OAAOH,GAMb,MAAM9N,EAAWjM,EAAK5J,iBAAiB,EACnC4J,EAAK5J,MAAM6V,cACXjO,EACJsU,EACIX,EAAWoI,EAAqC9N,GACpDzD,EAAYC,EAAWA,EAAU6K,YACjC7K,EAAU2F,YAAY2L,GACtB,EAAM7I,IAAIzI,EAAWzI,IAQlB4Z,GAAeC,GAClB3gB,OAAO2Y,SAAU4H,aAAchR,EAAyBhD,OKxTjD,MAAM0U,WAAeC,GAElCT,SACE,OAAO1M,CAAI,uLAUb2L,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,eACtBsS,eAAe+R,OAAO,aAAcF,ICpBvB,MAAMG,WAAaF,GAEhCT,SACE,OAAO1M,CAAI,8UAeb2L,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,aACtBsS,eAAe+R,OAAO,WAAYC,IC3B7B,MAAMC,GAAeC,IAC1B,MAAMC,EAAO,IAAIlU,KAAKiU,GACtB,MAAQ,GAAEC,EAAKC,aAAaD,EAAKE,WAAW,KAAKF,EAAKG,iBC8lBjD,SAASC,MA/lBhB,IAAIrb,GAASrI,EAAQ,GAGN,MAAM2jB,WAAqBV,GAExCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KACZ2E,KAAK2b,OAAS,KAGhB,wBACE,MAAO,CACLtgB,KAAM,CAACyQ,KAAMrV,QACbklB,OAAQ,CAAC7P,KAAMrV,SAIbmlB,YAf6C,QAkBzC5b,KAlByC,OA2gB9C,SAAe6b,EAAMxc,EAAMyc,GACjC,GAAIA,EACH,OAAOzc,EAAOA,EAAKwc,KAAUA,IAE9B,IACC,IAAI5hB,EAAS2C,QAAQC,QAAQgf,KAC7B,OAAOxc,EAAOpF,EAAOoF,KAAKA,GAAQpF,EACjC,MAAOyB,GACR,OAAOkB,QAAQE,OAAOpB,IAnhB6B,aAiBjD,IAAIqgB,EAAQ,GACZA,EAAQ,EAAK1gB,KAAK4G,MAAMY,MAAM,KAC9BkZ,EAAQA,EAAM/R,MAAM,EAAG,GACvB+R,EAAQA,EAAMnY,KAAK,KALH,OAiEb,SAAgB5M,EAAOqI,EAAMyc,GACnC,OAAIA,EACIzc,EAAOA,EAAKrI,GAASA,GAExBA,GAAUA,EAAMqI,OACpBrI,EAAQ4F,QAAQC,QAAQ7F,IAElBqI,EAAOrI,EAAMqI,KAAKA,GAAQrI,GAxEd,CA4Eb,SAAuBA,EAAO8kB,GACpC,IAAKA,EACJ,OAAO9kB,GAASA,EAAMqI,KAAOrI,EAAMqI,KAAN,IAAqBzC,QAAQC,UA9ExC,CAYVuD,GAAO2b,EALF,CACTlb,WAAY,EACZvJ,IAAK,2CAGmB,CAACkJ,EAAKC,KAC9B,GAAGD,EAAK,OAAOmS,QAAQqJ,IAAIxb,GAC3B,EAAKmb,OAASlb,SAKlB2X,eACE,QAAKpY,KAAK3E,OACL2E,KAAK2b,QACR3b,KAAK4b,aAEA,GAGTrB,SACE,MAAM0B,EAAUjc,KAAK3E,KACfggB,EAAOF,GAAYc,EAAQna,aAEjC,OAAO+L,CAAI,+EAGKoO,EAAQC,gDACLD,EAAQxe,QAAQwe,EAAQha,sBACjCga,EAAQ/Z,sCACM+Z,EAAQvT,OAAOpS,gBAAgB+kB,gBACjDY,EAAQE,QAAUtO,CAAI,wBAAwBoO,EAAQE,cAAgB,SACnEF,EAAQxR,2BACCwR,EAAQxe,mCACpBuC,KAAK2b,QAAU3b,KAAKoc,eAAiB,aAK7CA,cACE,MAAMC,EAAQrc,KAAK2b,OAAO,GACpBN,EAAOF,GAAYkB,EAAMva,aAC/B,OAAOua,GAASxO,CAAI,mIAGsCwO,EAAM5a,wIAGrB4a,EAAM5a,iJAE7B4a,EAAMpa,qBACnBoa,EAAMna,2CACemZ,iBACvB,GAIP7B,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,sBACtBsS,eAAe+R,OAAO,oBAAqBS,ICvF9B,MAAMY,WAAsBtB,GAEzCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KAGd,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,QACb8lB,MAAO,CAACzQ,KAAMrV,SAIlB2hB,eACE,QAAKpY,KAAK3E,KAMZkf,SACE,OAAO1M,CAAI,qEAIL7N,KAAK3E,KAAK0F,IAAKkb,IACf,MAAMZ,EAAOF,GAAYc,EAAQna,aACjC,OAAO+L,CAAI,iBACMoO,EAAQxe,QAAQwe,EAAQha,oCACnBga,EAAQvT,OAAOpS,gBAAgB+kB,gBACjDY,EAAQE,QAAUtO,CAAI,wBAAwBoO,EAAQE,cAAgB,SACnEF,EAAQ/Z,+BACC+Z,EAAQxe,iDAShC+b,mBACE,OAAOxZ,MCsCJ,YAAgBhJ,EAAOqI,EAAMyc,GACjC,OAAEA,EACIzc,EAAOA,EAAKrI,GAASA,GAExBA,GAAUA,EAAMqI,OACpBrI,EAAQ4F,QAAQC,QAAQ7F,IAElBqI,EAAOrI,EAAMqI,KAAKA,GAAQrI,GDxC7BkS,eAAetS,IAAI,uBACtBsS,eAAe+R,OAAO,qBAAsBqB,ICjD/B,MAAME,WAAgBxB,GAEnCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KAGd,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,QACb8lB,MAAO,CAACzQ,KAAMrV,SAIlB2hB,eACE,QAAKpY,KAAK3E,OACL2E,KAAKuc,OACRvc,KAAKyc,aAEA,GAGHA,YAtBwC,QAwBhCzc,KAxBgC,OA4gBzC,SAAe6b,EAAMxc,EAAMyc,GACjC,GAAIA,EACH,OAAOzc,EAAOA,EAAKwc,KAAUA,IAE9B,IACC,IAAI5hB,EAAS2C,QAAQC,QAAQgf,KAC7B,OAAOxc,EAAOpF,EAAOoF,KAAKA,GAAQpF,EACjC,MAAOyB,GACR,OAAOkB,QAAQE,OAAOpB,IAphBwB,aAwB5C,IAAIqgB,EAAQ,EAAK1gB,KAAK,GAAG4G,MAAMY,MAAM,KACrCkZ,EAAQA,EAAM/R,MAAM,EAAG,GACvB+R,EAAQA,EAAMnY,KAAK,KAEnB,MAAMjB,EAAU,CACd,UAAa,QACb,QAAY,SACZ,aAAiB,KACjB,EAAMoZ,EACN,WAAe,EACf,IAAQ,2CAGJte,EAAM,IAAIif,IAAI,mDACpB,IAAK,IAAIplB,KAAOqL,EACdlF,EAAIkf,aAAaC,OAAOtlB,EAAKqL,EAAQrL,IAGvC,IAAIulB,EApBY,UAqBGC,MAAMrf,IArBT,SAqBVvH,GAEN,OAAIA,EAAK6mB,IACPF,EAAO3mB,EAAK8mB,OAgfY3d,EAxgBV,WAiChB,OAAO,OAweNpF,EAzgBe,cA6BZ4iB,EA7BY,UA8BKA,GA9BL,YA8Bd,EAAKN,MAAL,KA2eQV,KACC5hB,EAAOoF,KACbpF,EAAOoF,KAAKA,GAEbA,EAAKpF,IAnfA,KA8eN,IAAuBoF,EACzBpF,QAreHsgB,SACE,MAAM0B,EAAUjc,KAAK3E,KAAK,GACpB4hB,EAAWjd,KAAK3E,KAAK2O,MAAM,EAAG,GACpC,OAAO6D,CAAI,0WAUOoO,EAAQC,gDACLD,EAAQxe,QAAQwe,EAAQha,qBAClCga,EAAQ/Z,mBACX+Z,EAAQE,QAAUtO,CAAI,wBAAwBoO,EAAQE,cAAgB,6CAEtEc,EAASlc,IAAKkb,GACPpO,CAAI,iBACMoO,EAAQxe,QAAQwe,EAAQha,sBAGzCjC,KAAKuc,OAASvc,KAAKkd,eAAiB,aAM9CA,cACE,IAAIX,EAAQvc,KAAKuc,MAAMjb,MAAM6b,OAAQ7iB,GAAcA,EAAE8iB,WAAWC,YAEhE,OADAd,EAAQA,EAAMe,OAAO,EAAG,GACjBzP,CAAI,mCAEP0O,EAAMxb,IAAMwc,IACZ,MAAMC,EAAUD,EAAKH,WAAWI,QAAQ5Z,KAAK,MACvC6Z,GH5FcrC,EG4FKmC,EAAKH,WAAWM,cH1FvC,GADK,IAAIvW,KAAKiU,GACPI,iBAFWJ,MG6FpB,OAAOvN,CAAI,gCAEI0P,EAAKH,WAAWO,mCACbJ,EAAKH,WAAWC,WAAWO,2CAE5BL,EAAKH,WAAWnb,4BACrBub,uBACQD,EAAKH,WAAWS,uCACpBN,EAAKH,WAAWU,mCAChBL,6BAOtBjE,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,gBACtBsS,eAAe+R,OAAO,cAAeuB,IClHxB,MAAMuB,WAAmB/C,GAEtCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KAGd,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,SAIjB2hB,eACE,QAAKpY,KAAK3E,KAIZkf,SACE,OAAO1M,CAAI,mJASwB7N,KAAK3E,yHAa1Cme,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,oBACtBsS,eAAe+R,OAAO,kBAAmB8C,IChD5B,MAAMC,WAAqBhD,GAExCT,SACE,OAAO1M,CAAI,8PAsBb2L,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,sBACtBsS,eAAe+R,OAAO,oBAAqB+C,I,MCvCtC,MAAMC,GAAc,KAEzB,IAAI/W,EAASnN,SAASmN,OACtB,MAAsB,iBAAXA,EAA4B,IACvCA,EAASA,EAAOrE,MAAM,MACtBqE,EAASA,EAAOgX,KAAKC,GAAOA,EAAIC,WAAW,eAAiB,GAEvDlX,GACLA,EAASA,EAAOrE,MAAM,KAAK,GACpBvH,KAAKG,MAAMyL,IAFE,KCHP,MAAMmX,WAAarD,GAEhCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KAGd,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,SAIjB2hB,eACE,QAAKpY,KAAK3E,KAIZkf,SACE,MAAM0B,EAAUjc,KAAK3E,KACrB,OAAOwS,CAAI,2DAGOoO,EAAQC,wEAEHD,EAAQxe,QAAQwe,EAAQha,4CACfga,EAAQ/Z,0BAC9B+Z,EAAQE,QAAUtO,CAAI,wBAAwBoO,EAAQE,cAAgB,2BAOlF3C,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,aACtBsS,eAAe+R,OAAO,WAAYoD,ICrCrB,MAAMC,WAAmBtD,GAEtCvW,cACE0L,QACAnQ,KAAK3E,KAAO,KAGd,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,SAIjB2hB,eACE,QAAKpY,KAAK3E,QACL2E,KAAK3E,KAAK4hB,SAIjB1C,SACE,IAAIgE,EAAOve,KAAK3E,KAAK4hB,SAASjT,MAAM,EAAG,GACnCwU,EAAUxe,KAAK3E,KAAK4hB,SAASjT,MAAM,EAAG,GAC1C,OAAO6D,CAAI,qGAOY7N,KAAK3E,KAAK4hB,SAAS,kFAGNjd,KAAK3E,KAAK4hB,SAAS,uDAClBsB,8DAKXC,4BAO5BhF,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,oBACtBsS,eAAe+R,OAAO,kBAAmBqD,ICwBpC,YAAgBtnB,EAAOqI,EAAMyc,GACjC,OAAEA,EACIzc,EAAOA,EAAKrI,GAASA,GAExBA,GAAUA,EAAMqI,OACpBrI,EAAQ4F,QAAQC,QAAQ7F,IAElBqI,EAAOrI,EAAMqI,KAAKA,GAAQrI,GA3FlC,yCAOe,MAAMynB,WAAezD,GAElCvW,cACE0L,QACAnQ,KAAK1I,IAAM,mCACX0I,KAAK3E,KAAO,KAId,wBACE,MAAO,CACLA,KAAM,CAACyQ,KAAMrV,SAIjB,UACE,MAAQ,qEAAoEuJ,KAAK1I,MAGnF,kBACE,MAAQ,0CAAyC0I,KAAK1I,MAGlDonB,WAvBuC,QAwB9B1e,KAxB8B,IAuB9BvC,EAvB8B,uDAuBxB,KAvBwB,OAwgBxC,SAAeoe,EAAMxc,EAAMyc,GACjC,GAAIA,EACH,OAAOzc,EAAOA,EAAKwc,KAAUA,IAE9B,IACC,IAAI5hB,EAAS2C,QAAQC,QAAQgf,KAC7B,OAAOxc,EAAOpF,EAAOoF,KAAKA,GAAQpF,EACjC,MAAOyB,GACR,OAAOkB,QAAQE,OAAOpB,IAhhBuB,aAyB3C,IAAImhB,EAFqB,OACzBpf,EAAMA,GAAO,EAAKA,IADO,GAGNqf,MAAMrf,EAAK,CAC5B1C,QAAU,CACR,8BAAgC,+BALX,SAGnB7E,GAMN,OAAIA,EAAK6mB,IACPF,EAAO3mB,EAAK8mB,OAyfY3d,EAngBD,WAkBzB,OAAO,OAkfNpF,EApgBwB,cAerB4iB,EAfqB,UAgBLA,GAhBK,YAgBvB,EAAKxhB,KAAL,KAofQwgB,KACC5hB,EAAOoF,KACbpF,EAAOoF,KAAKA,GAEbA,EAAKpF,IA5fA,KAufN,IAAuBoF,EACzBpF,QA/eH,WAEE,OADegkB,KACDU,QAAU,OAG1B,gBAEE,OADeV,KACD5iB,MAAQ,OAGxB,WACE,OAAO2E,KAAK4e,MAGd,SAAS5nB,GACP,MAAMqf,EAAWrW,KAAK4e,MAEtB,GAAI5nB,EAAO,CACT,MAAM6nB,ECrE2B,WAAsB,IAArBC,EAAqB,uDAAX,OAEhD,MAAMC,EAAW,CACf,KAAS,CACP,aACA,iBACA,iBACA,mBACA,uBACA,cACA,oBACA,UACA,WACA,qBACA,aACA,cACA,eACA,cACA,aACA,gBAEF,OAAW,CACT,aACA,iBACA,iBACA,sBACA,mBACA,cACA,gBACA,uBACA,cACA,oBACA,UACA,uBACA,WACA,qBACA,aACA,cACA,eACA,cACA,aACA,iBACA,gBAEF,KAAS,CACP,sBACA,cACA,gBACA,cACA,oBACA,UACA,uBACA,aACA,mBAGJ,OAAOA,EAASD,GDaIE,CAAwBhf,KAAKif,WAC7CtM,QAAQqJ,IAAIhc,KAAKif,WACjBtM,QAAQqJ,IAAI6C,GACZ7nB,EAAMimB,SAAWjmB,EAAMimB,SAASE,OAAQlB,GAC/B4C,EAAQK,SAASjD,EAAQvT,OAAOpS,OAG3C0J,KAAK4e,MAAQ5nB,EACbgJ,KAAKmf,cAAc,OAAQ9I,GAI7B+B,eACE,OAAKpY,KAAK3E,MAIVsX,QAAQqJ,IAAIhc,KAAK3E,OACV,IAJL2E,KAAK0e,YACE,GAMXnE,SACE,OAAQva,KAAK8L,MACX,IAAK,OACH,OAAO+B,CAAI,2BAA0B7N,KAAK3E,2BAC5C,IAAK,SACH,OAAOwS,CAAI,6BAA4B7N,KAAK3E,6BAC9C,IAAK,OACH,OAAOwS,CAAI,2BAA0B7N,KAAK3E,4BAIhDme,mBACE,OAAOxZ,MAKNkJ,eAAetS,IAAI,eACtBsS,eAAe+R,OAAO,aAAcwD","file":"all.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/js/webcomponents/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","var querystring = require('querystring')\nvar axios = require('axios')\n\nvar allowedProperties = [\n  'fields',\n  'channelId',\n  'channelType',\n  'eventType',\n  'forContentOwner',\n  'forDeveloper',\n  'forMine',\n  'location',\n  'locationRadius',\n  'onBehalfOfContentOwner',\n  'order',\n  'pageToken',\n  'publishedAfter',\n  'publishedBefore',\n  'regionCode',\n  'relatedToVideoId',\n  'relevanceLanguage',\n  'safeSearch',\n  'topicId',\n  'type',\n  'videoCaption',\n  'videoCategoryId',\n  'videoDefinition',\n  'videoDimension',\n  'videoDuration',\n  'videoEmbeddable',\n  'videoLicense',\n  'videoSyndicated',\n  'videoType',\n  'key'\n]\n\nmodule.exports = function search (term, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  if (!opts) opts = {}\n\n  if (!cb) {\n    return new Promise(function (resolve, reject) {\n      search(term, opts, function (err, results, pageInfo) {\n        if (err) return reject(err)\n        resolve({results: results, pageInfo: pageInfo})\n      })\n    })\n  }\n\n  var params = {\n    q: term,\n    part: opts.part || 'snippet',\n    maxResults: opts.maxResults || 30\n  }\n\n  Object.keys(opts).map(function (k) {\n    if (allowedProperties.indexOf(k) > -1) params[k] = opts[k]\n  })\n\n  axios.get('https://www.googleapis.com/youtube/v3/search?' + querystring.stringify(params))\n    .then(function (response) {\n      var result = response.data\n\n      var pageInfo = {\n        totalResults: result.pageInfo.totalResults,\n        resultsPerPage: result.pageInfo.resultsPerPage,\n        nextPageToken: result.nextPageToken,\n        prevPageToken: result.prevPageToken\n      }\n\n      var findings = result.items.map(function (item) {\n        var link = ''\n        var id = ''\n        switch (item.id.kind) {\n          case 'youtube#channel':\n            link = 'https://www.youtube.com/channel/' + item.id.channelId\n            id = item.id.channelId\n            break\n          case 'youtube#playlist':\n            link = 'https://www.youtube.com/playlist?list=' + item.id.playlistId\n            id = item.id.playlistId\n            break\n          default:\n            link = 'https://www.youtube.com/watch?v=' + item.id.videoId\n            id = item.id.videoId\n            break\n        }\n\n        return {\n          id: id,\n          link: link,\n          kind: item.id.kind,\n          publishedAt: item.snippet.publishedAt,\n          channelId: item.snippet.channelId,\n          channelTitle: item.snippet.channelTitle,\n          title: item.snippet.title,\n          description: item.snippet.description,\n          thumbnails: item.snippet.thumbnails\n        }\n      })\n\n      return cb(null, findings, pageInfo)\n    })\n    .catch(function (err) {\n      return cb(err)\n    })\n}\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\n\r\nexport default class Header extends LitElement {\r\n\r\n  render() {\r\n    return html`\r\n      <!-- BEGIN HEADER -->\r\n      <div id=\"header\">\r\n        <div id=\"logo\"> <a href=\"#\"><img src=\"/assets/img/wireframe/logo.png\" alt=\"\" /></a> </div>\r\n        <div id=\"ad\"> <img src=\"/assets/img/ad-blank.png\" alt=\"\" /> </div>\r\n      </div>\r\n      <!-- END HEADER -->\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-header')) {\r\n  customElements.define('app-header', Header);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\n\r\nexport default class Menu extends LitElement {\r\n\r\n  render() {\r\n    return html`\r\n      <div id=\"nav\">\r\n        <ul>\r\n          <li><a href=\"/\">Home</a></li>\r\n          <li><a href=\"/lavoro\">Lavoro</a></li>\r\n          <li><a href=\"/salute\">Salute</a></li>\r\n          <li><a href=\"/scienza\">Scienza</a></li>\r\n          <li><a href=\"/sport\">Sport</a></li>\r\n          <li><a href=\"/intrattenimento\">Intrattenimento</a></li>\r\n          <li class=\"last\"><a href=\"/tecnologia\">Tecnologia</a></li>          \r\n        </ul>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-menu')) {\r\n  customElements.define('app-menu', Menu);\r\n}\r\n","export const date_format = (iso) => {\r\n  const date = new Date(iso);\r\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n};\r\n\r\nexport const year_format = (iso) => {\r\n  const date = new Date(iso);\r\n  return `${date.getFullYear()}`;\r\n};","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nvar search = require('youtube-search');\r\nimport {date_format} from \"../../utilities/date\";\r\n\r\nexport default class MainHeadline extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n    this.videos = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object},\r\n      videos: {type: Object}\r\n    }\r\n  };\r\n\r\n  async get_video() {\r\n\r\n    let param = '';\r\n    param = this.data.title.split(' ');\r\n    param = param.slice(0, 2);\r\n    param = param.join(' ');\r\n\r\n    var opts = {\r\n      maxResults: 3,\r\n      key: 'AIzaSyAgL1fR92j2dr5MoJY_Q_qu1N-HdDrYC8E'\r\n    };\r\n\r\n    await search(param, opts, (err, results) => {\r\n      if(err) return console.log(err);\r\n      this.videos = results;\r\n    });\r\n\r\n  }\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    if (!this.videos){\r\n      this.get_video();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const article = this.data;\r\n    const date = date_format(article.publishedAt);\r\n\r\n    return html`\r\n      <div id=\"main-headline\">\r\n        <h2 class=\"heading\">IN PRIMO PIANO</h2>\r\n        <img src=\"${article.urlToImage}\" alt=\"\" width=\"400\"/>\r\n        <h1><a href=\"${article.url}\">${article.title}</a></h1>\r\n        <h5>${article.description}</h5>\r\n        <p class=\"author\">${article.source.name} | <span>${date}</span></p>\r\n        ${article.author && html`<p class=\"author\">di ${article.author}</p>` || ''}\r\n        <p>${article.content}</p>\r\n        <p><a href=\"${article.url}\">Full story &raquo;</a></p>\r\n        ${this.videos && this.renderVideo() || ''}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  renderVideo(){\r\n    const video = this.videos[0];\r\n    const date = date_format(video.publishedAt);\r\n    return video && html`\r\n      <h2 class=\"heading\">Video Correlato</h2>\r\n      <object width=\"400\" height=\"300\">\r\n        <param name=\"movie\" value=\"http://www.youtube.com/v/${video.id}\" />\r\n        <param name=\"allowFullScreen\" value=\"true\" />\r\n        <param name=\"allowscriptaccess\" value=\"never\" />\r\n        <embed src=\"http://www.youtube.com/v/${video.id}\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"never\" allowfullscreen=\"true\" width=\"400\" height=\"300\"></embed>\r\n      </object>\r\n      <h2><a href=\"#\">${video.title}</a></h2>\r\n      <p>${video.description}</p>\r\n      <p class=\"author\"><span>${date}</span></p>      \r\n    ` || '';\r\n\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-main-headline')) {\r\n  customElements.define('app-main-headline', MainHeadline);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport {date_format} from \"../../utilities/date\";\r\n\r\nexport default class MoreHeadlines extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object},\r\n      books: {type: Object}\r\n    }\r\n  };\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return html`\r\n      <!-- BEGIN MORE HEADLINES -->\r\n      <div id=\"more-headlines\">\r\n        <h2 class=\"heading\">Altre Notizie</h2>\r\n        ${this.data.map((article) => {\r\n          const date = date_format(article.publishedAt);\r\n          return html`\r\n            <h3><a href=\"${article.url}\">${article.title}</a></h3>\r\n            <p class=\"author\">${article.source.name} | <span>${date}</span></p>\r\n            ${article.author && html`<p class=\"author\">di ${article.author}</p>` || ''} \r\n            <p>${article.description}</p>\r\n            <p><a href=\"${article.url}\">Full article &raquo;</a></p>\r\n          `\r\n        })}\r\n        \r\n      </div>\r\n      <!-- END MORE HEADLINES -->\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-more-headlines')) {\r\n  customElements.define('app-more-headlines', MoreHeadlines);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport {year_format} from \"../../utilities/date\";\r\n\r\nexport default class Sidebar extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object},\r\n      books: {type: Object}\r\n    }\r\n  };\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    if (!this.books){\r\n      this.get_books();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async get_books() {\r\n\r\n    let param = this.data[0].title.split(' ');\r\n    param = param.slice(0, 2);\r\n    param = param.join(' ');\r\n\r\n    const options = {\r\n      'printType': 'BOOKS',\r\n      'orderBy' : 'newest',\r\n      'langRestrict' : 'it',\r\n      'q' : param,\r\n      'maxResults' : 8,\r\n      'key' : 'AIzaSyAgL1fR92j2dr5MoJY_Q_qu1N-HdDrYC8E'\r\n    };\r\n\r\n    const url = new URL('https://content.googleapis.com/books/v1/volumes');\r\n    for (let key in options){\r\n      url.searchParams.append(key, options[key]);\r\n    }\r\n\r\n    let resp;\r\n    const call = await fetch(url);\r\n\r\n    if (call.ok) {\r\n      resp = call.json();\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    if (resp) {\r\n      this.books = await resp;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const article = this.data[0];\r\n    const articles = this.data.slice(1, 3);\r\n    return html`\r\n      <!-- BEGIN SIDEBARS -->\r\n        <div id=\"sidebars\">\r\n          <!-- BEGIN ADS -->\r\n          <a href=\"#\"><img src=\"/assets/img/side-ad.png\" alt=\"\" class=\"ad\" /></a> \r\n          <a href=\"#\"><img src=\"/assets/img/side-ad.png\" alt=\"\" class=\"ad-right\" /></a> \r\n          <a href=\"#\"><img src=\"/assets/img/side-ad.png\" alt=\"\" class=\"ad\" /></a> \r\n          <a href=\"#\"><img src=\"/assets/img/side-ad.png\" alt=\"\" class=\"ad-right\" /></a>\r\n          <!-- END ADS -->\r\n          <h2 class=\"heading-blue\">Focus</h2>\r\n          <img src=\"${article.urlToImage}\" alt=\"\" width=\"279\"/>\r\n          <h3><a href=\"${article.url}\">${article.title}</a></h3>\r\n          <p>${article.description}</p>\r\n          ${article.author && html`<p class=\"author\">di ${article.author}</p>` || ''}\r\n          <h2 class=\"heading\">Altre notizie</h2>\r\n          ${articles.map((article) => {\r\n            return html`\r\n              <h4><a href=\"${article.url}\">${article.title}</a></h4>    \r\n            `  \r\n          })}\r\n          ${this.books && this.renderBooks() || ''}          \r\n        </div>\r\n        <!-- END SIDEBARS -->\r\n    `;\r\n  }\r\n\r\n  renderBooks() {\r\n    let books = this.books.items.filter((b) => {return b.volumeInfo.imageLinks});\r\n    books = books.splice(0, 2);\r\n    return html`      \r\n      <h2 class=\"heading\">LIBRI</h2>\r\n      ${books.map( (book) => {\r\n        const authors = book.volumeInfo.authors.join(', ');\r\n        const year = year_format(book.volumeInfo.publishedDate);\r\n        return html`\r\n          <div class=\"book\">\r\n            <a href=\"${book.volumeInfo.canonicalVolumeLink}\">\r\n              <img src=\"${book.volumeInfo.imageLinks.thumbnail}\" width=\"128\"/>\r\n            </a>\r\n            <p><strong>${book.volumeInfo.title}</strong></p>\r\n            <p>di ${authors}</p>          \r\n            <p><em><small>${book.volumeInfo.subtitle}</small></em></p>\r\n            <P><small>${book.volumeInfo.publisher}</small></p>\r\n            <P><small>${year}</small></p>\r\n          </div>\r\n        `   \r\n      })}\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-sidebar')) {\r\n  customElements.define('app-sidebar', Sidebar);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport '../../general/app-header/app-header';\r\nimport '../../general/app-menu/app-menu';\r\nimport '../../general/app-main-headline/app-main-headline';\r\nimport '../../general/app-more-headlines/app-more-headlines';\r\nimport '../../general/app-sidebar/app-sidebar';\r\n\r\nexport default class SoftLayout extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object}\r\n    }\r\n  };\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <app-header></app-header>\r\n      <app-menu></app-menu>\r\n      SOFT\r\n      <!-- BEGIN CONTENT WRAPPER -->\r\n      <div id=\"content-wrapper\">\r\n        <!-- BEGIN MAIN -->\r\n        <div id=\"main\">\r\n          <div id=\"headlines\">\r\n            <app-main-headline .data=${this.data}></app-main-headline>\r\n            <app-more-headlines></app-more-headlines>\r\n          </div>\r\n        </div>\r\n        <!-- END MAIN -->\r\n        <!-- BEGIN SIDEBARS -->\r\n        <app-sidebar></app-sidebar>\r\n        <!-- END SIDEBARS -->\r\n      </div>\r\n      <!-- END CONTENT WRAPPER -->\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-layout-soft')) {\r\n  customElements.define('app-layout-soft', SoftLayout);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport '../../general/app-header/app-header';\r\nimport '../../general/app-menu/app-menu';\r\nimport '../../general/app-main-headline/app-main-headline';\r\nimport '../../general/app-more-headlines/app-more-headlines';\r\nimport '../../general/app-sidebar/app-sidebar';\r\n\r\nexport default class MediumLayout extends LitElement {\r\n\r\n  render() {\r\n    return html`\r\n      <app-header></app-header>\r\n      <app-menu></app-menu>\r\n      MEDIUM\r\n      <!-- BEGIN CONTENT WRAPPER -->\r\n      <div id=\"content-wrapper\">\r\n        <!-- BEGIN MAIN -->\r\n        <div id=\"main\">\r\n          <div id=\"headlines\">\r\n            <app-main-headline></app-main-headline>\r\n            <app-more-headlines></app-more-headlines>\r\n          </div>\r\n        </div>\r\n        <!-- END MAIN -->\r\n        <!-- BEGIN SIDEBARS -->\r\n        <app-sidebar></app-sidebar>\r\n        <!-- END SIDEBARS -->\r\n      </div>\r\n      <!-- END CONTENT WRAPPER -->\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-layout-medium')) {\r\n  customElements.define('app-layout-medium', MediumLayout);\r\n}\r\n","export const read_cookie = () => {\r\n\r\n  let cookie = document.cookie;\r\n  if (typeof cookie !== 'string') return {};\r\n  cookie = cookie.split('; ');\r\n  cookie = cookie.find(row => row.startsWith('emotional')) || '';\r\n\r\n  if (!cookie) return {};\r\n  cookie = cookie.split('=')[1];\r\n  return JSON.parse(cookie);\r\n\r\n};","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport data from '../../../data/hero-1.json';\r\nimport {read_cookie} from \"../../utilities/cookies\";\r\n\r\nexport default class Hero extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object}\r\n    }\r\n  };\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const article = this.data;\r\n    return html`\r\n      <div id=\"hero\">\r\n        <div class=\"hero_container\">\r\n          <img src=\"${article.urlToImage}\" alt=\"\" width=\"980\"/>\r\n          <div class=\"hero_info\">\r\n            <h1><a href=\"${article.url}\">${article.title}</a></h1>\r\n            <p class=\"summary\"><p>${article.description}</p></p>\r\n            ${article.author && html`<p class=\"author\">di ${article.author}</p>` || ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-hero')) {\r\n  customElements.define('app-hero', Hero);\r\n}\r\n","import {LitElement, html, css, unsafeCSS} from \"lit-element\";\r\nimport '../../general/app-header/app-header';\r\nimport '../../general/app-menu/app-menu';\r\nimport '../../general/app-main-headline/app-main-headline';\r\nimport '../../general/app-more-headlines/app-more-headlines';\r\nimport '../../general/app-hero/app-main-hero';\r\nimport '../../general/app-sidebar/app-sidebar';\r\n\r\nexport default class HardLayout extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.data = null;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object}\r\n    }\r\n  };\r\n\r\n  shouldUpdate(){\r\n    if (!this.data) return false;\r\n    if (!this.data.articles) return false;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    let more = this.data.articles.slice(2, 5);\r\n    let sidebar = this.data.articles.slice(5, 8);\r\n    return html`\r\n      <app-header></app-header>\r\n      <app-menu></app-menu>\r\n      HARD\r\n      <!-- BEGIN CONTENT WRAPPER -->\r\n      <div id=\"content-wrapper\">\r\n        <!-- BEGIN MAIN -->\r\n        <app-hero .data=\"${this.data.articles[0]}\"></app-hero>\r\n        <div id=\"main\">\r\n          <div id=\"headlines\">            \r\n            <app-main-headline .data=\"${this.data.articles[1]}\"></app-main-headline>\r\n            <app-more-headlines .data=\"${more}\"></app-more-headlines>\r\n          </div>\r\n        </div>\r\n        <!-- END MAIN -->\r\n        <!-- BEGIN SIDEBARS -->\r\n        <app-sidebar .data=\"${sidebar}\"></app-sidebar>\r\n        <!-- END SIDEBARS -->\r\n      </div>\r\n      <!-- END CONTENT WRAPPER -->\r\n    `;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-layout-hard')) {\r\n  customElements.define('app-layout-hard', HardLayout);\r\n}\r\n","import {LitElement, html} from \"lit-element\";\r\nimport './app-layout-soft/app-layout-soft';\r\nimport './app-layout-soft/app-layout-medium';\r\nimport './app-layout-soft/app-layout-hard';\r\nimport {read_cookie} from \"../utilities/cookies\";\r\nimport {get_sources_for_profile} from \"../utilities/sources\";\r\n\r\nexport default class Portal extends LitElement {\r\n\r\n  constructor(){\r\n    super();\r\n    this.key = '07ee10d2a94a4182a2b1985bebbb1d23';\r\n    this.data = null;\r\n    //this.get_data(this.url_sources);\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      data: {type: Object}\r\n    }\r\n  };\r\n\r\n  get url (){\r\n    return `http://newsapi.org/v2/top-headlines?pageSize=50&country=it&apiKey=${this.key}`;\r\n  }\r\n\r\n  get url_sources(){\r\n    return `https://newsapi.org/v2/sources?&apiKey=${this.key}`;\r\n  }\r\n\r\n  async get_data(url = null) {\r\n    url = url || this.url;\r\n    let resp;\r\n    const call = await fetch(url, {\r\n      headers : {\r\n        'Access-Control-Allow-Origin' : 'http://tesi.emotional.it'\r\n      }\r\n    });\r\n\r\n    if (call.ok) {\r\n      resp = call.json();\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    if (resp) {\r\n      this.data = await resp;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get type(){\r\n    const cookie = read_cookie();\r\n    return cookie.layout || 'soft';\r\n  }\r\n\r\n  get data_type(){\r\n    const cookie = read_cookie();\r\n    return cookie.data || 'soft';\r\n  }\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(value) {\r\n    const oldValue = this._data;\r\n\r\n    if (value) {\r\n      const sources = get_sources_for_profile(this.data_type);\r\n      console.log(this.data_type);\r\n      console.log(sources);\r\n      value.articles = value.articles.filter((article) => {\r\n        return sources.includes(article.source.name);\r\n      });\r\n    }\r\n    this._data = value;\r\n    this.requestUpdate('data', oldValue);\r\n  }\r\n\r\n\r\n  shouldUpdate(){\r\n    if (!this.data){\r\n      this.get_data();\r\n      return false;\r\n    }\r\n    console.log(this.data);\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    switch (this.type){\r\n      case 'soft':\r\n        return html`<app-layout-soft .data=${this.data}></app-layout-soft>`;\r\n      case 'medium':\r\n        return html`<app-layout-medium .data=${this.data}></app-layout-medium>`;\r\n      case 'hard':\r\n        return html`<app-layout-hard .data=${this.data}></app-layout-hard>`;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nif (!customElements.get('app-portal')) {\r\n  customElements.define('app-portal', Portal);\r\n}\r\n","export const get_sources_for_profile = (profile = 'soft') => {\r\n\r\n  const profiles = {\r\n    'soft' : [\r\n      'Fanpage.it',\r\n      'Multiplayer.it',\r\n      'Tuttosport.com',\r\n      'Tuttoandroid.net',\r\n      'Corriere dello Sport',\r\n      'Corriere.it',\r\n      'Huffingtonpost.it',\r\n      'ANSA.it',\r\n      'Leggo.it',\r\n      'Orizzontescuola.it',\r\n      'Rainews.it',\r\n      'Gazzetta.it',\r\n      'Hwupgrade.it',\r\n      'Mediaset.it',\r\n      'Gelocal.it',\r\n      'Siviaggia.it'\r\n    ],\r\n    'medium' : [\r\n      'Fanpage.it',\r\n      'Multiplayer.it',\r\n      'Tuttosport.com',\r\n      'Liberoquotidiano.it',\r\n      'Tuttoandroid.net',\r\n      'Lastampa.it',\r\n      'La Repubblica',\r\n      'Corriere dello Sport',\r\n      'Corriere.it',\r\n      'Huffingtonpost.it',\r\n      'ANSA.it',\r\n      'Ilrestodelcarlino.it',\r\n      'Leggo.it',\r\n      'Orizzontescuola.it',\r\n      'Rainews.it',\r\n      'Gazzetta.it',\r\n      'Hwupgrade.it',\r\n      'Mediaset.it',\r\n      'Gelocal.it',\r\n      'Il Sole 24 Ore',\r\n      'Siviaggia.it'\r\n    ],\r\n    'hard' : [\r\n      'Liberoquotidiano.it',\r\n      'Lastampa.it',\r\n      'La Repubblica',\r\n      'Corriere.it',\r\n      'Huffingtonpost.it',\r\n      'ANSA.it',\r\n      'Ilrestodelcarlino.it',\r\n      'Rainews.it',\r\n      'Il Sole 24 Ore',\r\n    ]\r\n  };\r\n  return profiles[profile];\r\n\r\n};"],"sourceRoot":""}